{"version":3,"sources":["pages/ErrorPage.js","paths/index.js","container/HomeContainer.js","pages/HomePage.js","components/assets/Loading.js","api/OnlineExhibitionAPI.js","container/OnlineExhibitionContainer.js","container/OnlineExhibitionListContainer.js","store/modal.js","store/exhibition.js","container/SwiperContainer.js","pages/OnlineExhibitionPage.js","lib/cookie.js","container/ConferenceContainer.js","pages/ConferencePage.js","container/WelcomingContainer.js","container/CongraturationContainer.js","pages/WelcomingPage.js","api/NoticeAPI.js","lib/formatter.js","container/Pagination.js","container/PaginationButton.js","container/NoticeListContainer.js","container/NoticeViewContainer.js","pages/NoticeListPage.js","container/SNSContainer.js","pages/SNSPage.js","store/dialog.js","components/assets/Dialog.js","container/assets/DialogContainer.js","container/assets/LoadingContainer.js","api/UserAPI.js","lib/formatChecker.js","container/OnlineExhibitionEventContainer.js","components/header/HeaderLogo.js","components/header/HeaderNavItem.js","components/header/HeaderNav.js","components/header/Header.js","store/language.js","App.js","serviceWorker.js","store/loading.js","store/index.js","index.js"],"names":["ErrorPage","language","useSelector","state","current","LANGUAGE_PACK","kr","css","title","content","en","cn","jp","current_pack","className","Paths","movie_name","online_go","conference_go","go","LANGUAGE_PATH","id","width","height","src","alt","frameBorder","allow","allowFullScreen","to","process","HomePage","HomeContainer","useStyles","makeStyles","theme","backdrop","zIndex","drawer","color","open","classes","Backdrop","CircularProgress","URL","getDocumentList","type","a","query","config","params","module_id","Axios","get","res","data","getShowDocument","OnlineExhibitionContainer","viewId","history","useHistory","useState","booth","setBooth","loading","setLoading","showingDocument","useCallback","alert","goBack","useEffect","e","push","download","contents_en","contents","photo_4","photo_3","style","position","bottom","margin","textAlign","left","photo_1","display","maxWidth","maxHeight","link","LINK","String","lastIndexOf","length","lastSlash","videoID","slice","videoType","youtube_link","onClick","indexOf","window","file_1","Loading","OnlineExhibitionListContainer","items","swiper","firstOpen","inputRef","useRef","leftLists","num","kr_text","en_text","cn_text","jp_text","result","setResult","search","setSearch","find","setFind","exist","setExist","listClick","parseInt","target","value","imgError","findList","findItem","filter","item","title_en","toLowerCase","focus","unit","name","checked","readOnly","htmlFor","map","list","key","onChange","onKeyPress","ref","photo_2","onError","firstModalOpen","createAction","secondModalOpen","modalClose","dialog","handleActions","action","first","second","SETID","setID","exhibition","payload","SwiperCore","use","Navigation","Pagination","Scrollbar","A11y","dataSet","slidesPerView","slidesPerGroup","loop","initalslide","loopFillGroupWithBlank","navigation","loopPreventsSlide","delay","OnlineExhibitionPage","match","location","index","qs","parse","ignoreQueryPrefix","t","dispatch","useDispatch","setItems","setSwiper","scrollTo","i","x","y","ARRcookies","document","cookie","split","substr","replace","unescape","getCookie","days","expires","date","Date","setTime","getTime","toGMTString","setCookie","callGetDocumentList","sort","b","swiperItem","SwiperContainer","isNaN","title2","name2","mode","CongraturationContainer","WelcomingContainer","crossBrowsingDate","setDate","dateFormatting","dateToYYYYMMDD","join","absolute","monthFormatting","getMonth","dayFormatting","getDate","getFullYear","noticeList","currentPage","currentList","created_at","listLength","paging","pageLink","page","leng","undefined","Math","floor","paginationButton","amount","amount2","subject","scope","PaginationButton","near","noticeView","setNoticeView","callNoticeView","prev","next","href","rel","p","setNoticeList","callNoticeList","getNearFromList","idx","findIndex","NoticeListContainer","NoticeViewContainer","youtube","facebook","instagram","SNSContainer","dialogClose","confirm","text","handleClick","form","onClose","ButtonBase","Dialog","Object","values","reduce","cur","postUserEvent","email","phone","formData","FormData","append","post","isEmailForm","asValue","test","onlyNumberListener","preventDefault","reducer","trim","OnlineExhibitionEventContainer","secondOpen","close","states","modal","useReducer","tel","agree","setAgree","inputCheck","phoneData","emailData","nextTime","closeModal","subject2","necessary","placeholder","belong","mobile","privacy","submit","mention","mention2","mention3","cancel","top","right","fontWeight","onKeyDown","selectLanguage","setDefault","selectEffect","path","Language","navList","selected","HeaderNavItem","LANGUAGE_URL_LIST","Header","useLocation","pathbase","pathname","setNavList","HeaderLogo","HeaderNav","setLanguage","c_lang","LANGUAGE_LIST","App","reduxDispatch","UserAgent","navigator","userAgent","isMobile","STATE_PATH","CSS_PATH","component","exact","ConferencePage","WelcomingPage","NoticeListPage","SNSPage","DialogContainer","LoadingContainer","Boolean","hostname","requestType","rootReducer","combineReducers","store","createStore","ReactDOM","render","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"ojDA0CeA,G,OAtCG,WACd,IAAMC,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,WAG/CC,EAAgB,CAClBC,GAAI,CACAC,IAAK,GACLC,MAAO,kCACPC,QAAS,0EAEbC,GAAI,CACAH,IAAK,eACLC,MAAO,aACPC,QAAS,mBAEbE,GAAI,CACAJ,IAAK,eACLC,MAAO,qBACPC,QAAS,sBAEbG,GAAI,CACAL,IAAK,eACLC,MAAO,qBACPC,QAAS,uBAIXI,EAAeR,EAAcJ,GAAYI,EAAcJ,GAAYI,EAAa,GAGtF,OACI,yBAAKS,UAAW,QAAUD,EAAaN,KACnC,wBAAIO,UAAW,QAAUD,EAAaN,KAAMM,EAAaL,OACzD,uBAAGM,UAAW,UAAYD,EAAaN,KAAMM,EAAaJ,Y,QCrCzDM,EACF,IADEA,EAEG,qBAFHA,EAGA,mBAHAA,EAIG,cAJHA,EAKD,UALCA,EAMJ,OANIA,EAOJ,iCCAM,aAEX,IAAMd,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,WAG/CC,EAAgB,CAClBC,GAAI,CACAC,IAAK,GACLS,WAAY,iFACZC,UAAW,uCACXC,cAAe,2BACfC,GAAI,4BAERT,GAAI,CACAH,IAAK,eACLS,WAAY,UACZC,UAAW,oBACXC,cAAe,aACfC,GAAI,MAERR,GAAI,CACAJ,IAAK,eACLS,WAAY,qBACZC,UAAW,qBACXC,cAAe,qBACfC,GAAI,sBAERP,GAAI,CACAL,IAAK,eACLS,WAAY,qBACZC,UAAW,qBACXC,cAAe,qBACfC,GAAI,uBAINN,EAAeR,EAAcJ,GAAYI,EAAcJ,GAAYI,EAAa,GAGhFe,EAA6B,KAAbnB,EAAA,WAAsBA,GAAa,GAEzD,OACI,6BAASoB,GAAG,iBAAiBP,UAAWD,EAAaN,KACjD,yBAAKO,UAAW,eAAiBD,EAAaN,KAC1C,yBAAKO,UAAW,QAAUD,EAAaN,KAGnC,4BACIC,MAAM,UACNc,MAAM,OACNC,OAAO,OACPC,IAAI,4CACJC,IAAI,GACJC,YAAY,IACZC,MAAM,2FACNC,iBAAe,KAIvB,yBAAKd,UAAW,QAAUD,EAAaN,KACnC,kBAAC,IAAD,CAAMsB,GAAIT,EAAgBL,GACtB,yBAAKD,UAAW,WAAaD,EAAaN,KACtC,4BACA,yBAAKiB,IAAG,UAAKM,gBAAL,wBAAmDL,IAAI,KAC/D,4BAAKZ,EAAaI,WAClB,8BAAOJ,EAAaM,GAApB,KAA0B,OAGlC,kBAAC,IAAD,CAAMU,GAAIT,EAAgBL,GACtB,yBAAKD,UAAW,SAAWD,EAAaN,KACpC,4BACA,yBAAKiB,IAAG,UAAKM,gBAAL,sBAAiDL,IAAI,KAC7D,4BAAKZ,EAAaK,eAClB,8BAAOL,EAAaM,GAApB,KAA0B,WCvEvCY,EANE,WACb,OACI,kBAACC,EAAD,O,8ECEFC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,SAAU,CACNC,OAAQF,EAAME,OAAOC,OAAS,EAC9BC,MAAO,YAIA,cAAe,IAAZC,EAAW,EAAXA,KACRC,EAAUR,IAChB,OACI,kBAACS,EAAA,EAAD,CAAU5B,UAAW2B,EAAQL,SAAUI,KAAMA,GACzC,kBAACG,EAAA,EAAD,CAAkBJ,MAAM,c,iBCd9BK,EAAM7B,EAEC8B,EAAe,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACrBC,EADqB,UACVJ,EADU,aAErBK,EAAS,CACXC,OAAQ,CACJC,UAAW,EACXL,KAAMA,IALa,SAQTM,IAAMC,IAAIL,EAAOC,GARR,cAQrBK,EARqB,yBASpBA,EAAIC,MATgB,2CAAH,sDAYfC,EAAe,uCAAG,WAAOnC,GAAP,iBAAA0B,EAAA,6DACrBC,EADqB,UACVJ,EADU,qBACMvB,GADN,SAET+B,IAAMC,IAAIL,GAFD,cAErBM,EAFqB,yBAGpBA,EAAIC,MAHgB,2CAAH,sDC6MbE,EAvNmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAE3Bd,EAAM,0BACNe,EAAUC,cAH8B,EAKpBC,mBAAS,IALW,mBAKvCC,EALuC,KAKhCC,EALgC,KAOxC9D,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,WAPP,EAShByD,oBAAS,GATO,mBASvCG,EATuC,KAS9BC,EAT8B,KAWxCC,EAAkBC,sBAAW,sBAAC,4BAAApB,EAAA,6DAChCkB,GAAW,GADqB,kBAGVT,EAAgBE,GAHN,OAGtBJ,EAHsB,OAI5BS,EAAST,GAJmB,gDAM5Bc,MAAM,kGACNT,EAAQU,SAPoB,QAShCJ,GAAW,GATqB,yDAUjC,CAACP,EAAQC,IAEZW,qBAAU,WACN,IACIJ,IACF,MAAOK,GACLH,MAAM,kFAEX,CAACF,IAEJ,IAAMpB,EAAO,GACM,IAAfgB,EAAMhB,MACNA,EAAK0B,KAAK,mCACV1B,EAAK0B,KAAK,qBACV1B,EAAK0B,KAAK,sBACV1B,EAAK0B,KAAK,uBAEU,IAAfV,EAAMhB,MACXA,EAAK0B,KAAK,6BACV1B,EAAK0B,KAAK,iBACV1B,EAAK0B,KAAK,sBACV1B,EAAK0B,KAAK,uBAEU,IAAfV,EAAMhB,MACXA,EAAK0B,KAAK,4BACV1B,EAAK0B,KAAK,qBACV1B,EAAK0B,KAAK,sBACV1B,EAAK0B,KAAK,uBAEU,IAAfV,EAAMhB,MACXA,EAAK0B,KAAK,4BACV1B,EAAK0B,KAAK,mBACV1B,EAAK0B,KAAK,sBACV1B,EAAK0B,KAAK,uBAEU,IAAfV,EAAMhB,MACXA,EAAK0B,KAAK,4BACV1B,EAAK0B,KAAK,+BACV1B,EAAK0B,KAAK,sBACV1B,EAAK0B,KAAK,uBAEU,IAAfV,EAAMhB,MACXA,EAAK0B,KAAK,gBACV1B,EAAK0B,KAAK,oBACV1B,EAAK0B,KAAK,sBACV1B,EAAK0B,KAAK,uBAEU,IAAfV,EAAMhB,MACXA,EAAK0B,KAAK,gBACV1B,EAAK0B,KAAK,UACV1B,EAAK0B,KAAK,sBACV1B,EAAK0B,KAAK,uBAEU,IAAfV,EAAMhB,MACXA,EAAK0B,KAAK,sBACV1B,EAAK0B,KAAK,aACV1B,EAAK0B,KAAK,sBACV1B,EAAK0B,KAAK,uBAEU,IAAfV,EAAMhB,MACXA,EAAK0B,KAAK,4BACV1B,EAAK0B,KAAK,iBACV1B,EAAK0B,KAAK,sBACV1B,EAAK0B,KAAK,uBAEU,IAAfV,EAAMhB,MACXA,EAAK0B,KAAK,kCACV1B,EAAK0B,KAAK,mBACV1B,EAAK0B,KAAK,sBACV1B,EAAK0B,KAAK,uBAEU,KAAfV,EAAMhB,OACXA,EAAK0B,KAAK,sBACV1B,EAAK0B,KAAK,kBACV1B,EAAK0B,KAAK,sBACV1B,EAAK0B,KAAK,uBAId,IAAMnE,EAAgB,CAClBC,GAAI,CACAC,IAAK,GACLkE,SAAU,yCAEd/D,GAAI,CACAH,IAAK,eACLkE,SAAU,gBAEd9D,GAAI,CACAJ,IAAK,eACLkE,SAAU,IAEd7D,GAAI,CACAL,IAAK,eACLkE,SAAU,KAIZ5D,EAAeR,EAAcJ,GAAYI,EAAcJ,GAAYI,EAAa,GAoCtF,OACI,6BAASgB,GAAG,eAAeP,UAAWD,EAAaN,MAC7CyD,GACE,oCACI,4BAAkB,OAAb/D,EAAoB6C,EAAK,GACX,OAAb7C,EAAoB6C,EAAK,GACR,OAAb7C,EAAoB6C,EAAK,GACrBA,EAAK,GAHnB,SAGqC,OAAb7C,EAAoB6D,EAAMY,YAChCZ,EAAMa,UACxB,yBAAK7D,UAAW,SAAWD,EAAaN,KACpC,8BACI,yBAAKiB,IAAG,UAAKM,gBAAL,yBAAoDL,IAAI,MAEpE,8BACI,yBAAKD,IAAG,UAAKM,gBAAL,0BAAqDL,IAAI,OAGzE,yBAAKX,UAAW,OAASD,EAAaN,KACjCuD,EAAMc,SAAW,yBAAKpD,IAAKoB,EAAMkB,EAAMc,QAASnD,IAAI,MAGzD,yBAAKX,UAAW,QAAUD,EAAaN,KAClCuD,EAAMc,SAAW,yBAAKpD,IAAKoB,EAAMkB,EAAMe,QAASpD,IAAI,MAEzD,yBAAKX,UAAW,OAASD,EAAaN,KAClC,uBACIuE,MAAO,CAAEC,SAAU,WAAYC,OAAQ,QAAS1D,MAAO,OAAQ2D,OAAQ,SAAUC,UAAW,SAAUC,KAAM,MAAO9C,OAAQ,OAC1HyB,EAAMsB,SAAW,yBACdN,MAAO,CAAEO,QAAS,QAASC,SAAU,OAAQC,UAAW,QAASN,OAAQ,SAAUC,UAAW,UAC9F1D,IAAKoB,EAAMkB,EAAMsB,QACjB3D,IAAI,MAGZ,8BAAM,yBAAKD,IAAG,UAAKM,gBAAL,6BAAwDL,IAAI,MAC1E,yBAAKX,UAAW,SAAWD,EAAaN,KAnE1C,SAACiF,GACf,IAAMC,EAAOC,OAAOF,GACpB,IAAmC,IAA/BC,EAAKE,YAAY,SACjB,OAAO,4BACHnF,MAAM,UACNc,MAAM,MACNC,OAAO,MACPC,IAAKgE,EACL/D,IAAI,GACJC,YAAY,IACZC,MAAM,2FACNC,iBAAe,IAGlB,GAAoB,IAAhB6D,EAAKG,OAAc,CACxB,IAAMC,EAAYJ,EAAKE,YAAY,KAC7BG,EAAUL,EAAKM,MAAMF,EAAWJ,EAAKG,QAC3C,OAAO,4BACHpF,MAAM,UACNc,MAAM,MACNC,OAAO,MACPC,IAAK,gCAAkCsE,EACvCrE,IAAI,GACJC,YAAY,IACZC,MAAM,2FACNC,iBAAe,IAInB,OAAO,yBAAKJ,IAAG,UAAKM,gBAAL,wBAAmDL,IAAI,GAAGH,MAAM,MAAMC,OAAO,QAuC3EyE,CAAUlC,EAAMmC,eAErB,yBAAKnF,UAAW,eACZ,4BAAQA,UAAW,MAAQD,EAAaN,IAAK2F,QAASpC,EAAM0B,MACvB,IAAhC1B,EAAM0B,KAAKW,QAAQ,QACpB,kBAAMC,OAAO5D,KAAKsB,EAAM0B,KAAM,WAAY,kBAAMY,OAAO5D,KAAK,UAAYsB,EAAM0B,KAAM,WAClF,cAIY,OAAbvF,EAAoB,WACF,OAAbA,EAAoB,qBACH,OAAbA,EAAoB,qBAChB,wCAVlB,IAU8B,KAE9B,4BAAQa,UAAW,MAAQD,EAAaN,IAAK2F,QAAS,kBAAME,OAAO5D,KAAKI,EAAMkB,EAAMuC,OAAQ,YAAYxF,EAAa4D,SAArH,IAAgI,QAKhJ,kBAAC6B,EAAD,CAAS9D,KAAMwB,MCuCZuC,EAzPuB,SAAC,GAAiD,IAA/CzD,EAA8C,EAA9CA,KAAM0D,EAAwC,EAAxCA,MAAOxC,EAAiC,EAAjCA,QAASyC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAE7D9D,EAAM,0BACNe,EAAUC,cACV3D,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,WAC/CuG,EAAWC,mBAEXC,EAAY,CACd,CACIC,IAAK,EACLzF,GAAI,KACJ0F,QAAS,kCACTC,QAAS,oBACTC,QAAS,qBACTC,QAAS,sBAEb,CACIJ,IAAK,EACLzF,GAAI,KACJ0F,QAAS,4BACTC,QAAS,gBACTC,QAAS,qBACTC,QAAS,sBAEb,CACIJ,IAAK,EACLzF,GAAI,KACJ0F,QAAS,2BACTC,QAAS,oBACTC,QAAS,qBACTC,QAAS,sBAEb,CACIJ,IAAK,EACLzF,GAAI,KACJ0F,QAAS,2BACTC,QAAS,kBACTC,QAAS,qBACTC,QAAS,sBAEb,CACIJ,IAAK,EACLzF,GAAI,KACJ0F,QAAS,2BACTC,QAAS,8BACTC,QAAS,qBACTC,QAAS,sBAEb,CACIJ,IAAK,EACLzF,GAAI,KACJ0F,QAAS,eACTC,QAAS,mBACTC,QAAS,qBACTC,QAAS,sBAEb,CACIJ,IAAK,EACLzF,GAAI,KACJ0F,QAAS,eACTC,QAAS,SACTC,QAAS,qBACTC,QAAS,sBAEb,CACIJ,IAAK,EACLzF,GAAI,MACJ0F,QAAS,qBACTC,QAAS,YACTC,QAAS,qBACTC,QAAS,sBAEb,CACIJ,IAAK,EACLzF,GAAI,MACJ0F,QAAS,qBACTC,QAAS,iBACTC,QAAS,qBACTC,QAAS,sBAEb,CACIJ,IAAK,EACLzF,GAAI,KACJ0F,QAAS,2BACTC,QAAS,gBACTC,QAAS,qBACTC,QAAS,sBAEb,CACIJ,IAAK,GACLzF,GAAI,KACJ0F,QAAS,iCACTC,QAAS,kBACTC,QAAS,qBACTC,QAAS,uBA9FkE,EAiGvDrD,mBAAS,IAjG8C,mBAiG5EsD,EAjG4E,KAiGpEC,EAjGoE,OAkGvDvD,mBAAS,IAlG8C,mBAkG5EwD,EAlG4E,KAkGpEC,EAlGoE,OAmG3DzD,mBAAS,IAnGkD,mBAmG5E0D,EAnG4E,KAmGtEC,EAnGsE,OAoGzD3D,oBAAS,GApGgD,mBAoG5E4D,EApG4E,KAoGrEC,EApGqE,KAuG7EtG,EAA6B,KAAbnB,EAAA,WAAsBA,GAAa,GAEnD0H,EAAY,SAAApD,GACdiD,EAAQ,IAAKF,EAAU,IAAKI,GAAS,GACrC/D,EAAQa,KAAKpD,EAAgBL,EAAmB,SAAW6G,SAASrD,EAAEsD,OAAOC,SAG3EC,EAAW5D,uBAAY,SAACI,GAC1BA,EAAEsD,OAAOrG,IAAMoB,EAAM,2DACtB,IAEGoF,EAAW7D,uBAAY,WAKzB,GAHe,KAAXkD,GAAeK,GAAS,GAGX,OAAbzH,EAAmB,CACnB,IAAMgI,EAAWzB,EAAM0B,QAAO,SAAAC,GAAI,OAAIA,EAAKC,SAASC,cAAclC,QAAQkB,EAAOgB,gBAAkB,KAC3E,IAApBJ,EAASrC,QAAgBxB,MAAM,6BAA8BoD,EAAQ,IAAKF,EAAU,IAAKI,GAAS,GAAQf,EAASvG,QAAQkI,UACxHZ,GAAS,GAAOF,EAAQS,SAC5B,GAAiB,OAAbhI,EAAmB,CAC1B,IAAMgI,EAAWzB,EAAM0B,QAAO,SAAAC,GAAI,OAAIA,EAAK3H,MAAM2F,QAAQkB,IAAW,KAC5C,IAApBY,EAASrC,QAAgBxB,MAAM,sBAAQoD,EAAQ,IAAKF,EAAU,IAAKI,GAAS,GAAQf,EAASvG,QAAQkI,UAClGZ,GAAS,GAAOF,EAAQS,SAC5B,GAAiB,OAAbhI,EAAmB,CAC1B,IAAMgI,EAAWzB,EAAM0B,QAAO,SAAAC,GAAI,OAAIA,EAAK3H,MAAM2F,QAAQkB,IAAW,KAC5C,IAApBY,EAASrC,QAAgBxB,MAAM,sBAAQoD,EAAQ,IAAKF,EAAU,IAAKI,GAAS,GAAQf,EAASvG,QAAQkI,UAClGZ,GAAS,GAAOF,EAAQS,QAC5B,CACH,IAAMA,EAAWzB,EAAM0B,QAAO,SAAAC,GAAI,OAAIA,EAAK3H,MAAM2F,QAAQkB,IAAW,KAC5C,IAApBY,EAASrC,QAAgBxB,MAAM,kGAAwBoD,EAAQ,IAAKF,EAAU,IAAKI,GAAS,GAAQf,EAASvG,QAAQkI,UAClHZ,GAAS,GAAOF,EAAQS,OAEpC,CAACZ,EAAQpH,EAAUuG,IAItBlC,qBAAU,WACDN,IACY,IAATlB,GAAcsE,EAAU,IAAKA,EAAUZ,IACzB,IAAT1D,GACLsE,EAAU,IAAKA,EAAUZ,EAAM0B,QAAO,SAAAC,GAAI,OAAkB,KAAdA,EAAKrF,UACnC,IAATA,GACPsE,EAAU,IAAKA,EAAUZ,EAAM0B,QAAO,SAAAC,GAAI,OAAkB,IAAdA,EAAKrF,UACnC,KAATA,GACPsE,EAAU,IAAKA,EAAUZ,EAAM0B,QAAO,SAAAC,GAAI,OAAkB,IAAdA,EAAKrF,WAC9CsE,EAAU,IAAKA,EAAUZ,EAAM0B,QAAO,SAAAC,GAAI,OAAIA,EAAKrF,OAASA,UAE1E,CAACkB,EAASlB,EAAM0D,IAGnB,IAAMnG,EAAgB,CAClBC,GAAI,CACAC,IAAK,GACLC,MAAO,uCACP+H,KAAM,SACNlB,OAAQ,mCAEZ3G,GAAI,CACAH,IAAK,eACLC,MAAO,oBACP+H,KAAM,GACNlB,OAAQ,qBAEZ1G,GAAI,CACAJ,IAAK,eACLC,MAAO,qBACP+H,KAAM,qBACNlB,OAAQ,sBAEZzG,GAAI,CACAL,IAAK,eACLC,MAAO,qBACP+H,KAAM,qBACNlB,OAAQ,uBAIVxG,EAAeR,EAAcJ,GAAYI,EAAcJ,GAAYI,EAAa,GAGtF,OACI,6BAASgB,GAAG,kBAAkBP,UAAWD,EAAaN,KAClD,yBAAKO,UAAW,eAAiBD,EAAaN,KAC1C,4BACI,2BAAOuC,KAAK,WAAWzB,GAAG,KAAKmH,KAAK,GAAG1H,UAAW,SAAWD,EAAaN,IAAKuH,MAAO,EAAG5B,QAASyB,EAAWc,QAAkB,IAAT3F,EAAY4F,UAAQ,IAC1I,2BAAOC,QAAQ,MAAK,+BAAc9H,EAAaL,QAEnD,4BACKqG,EAAU+B,KAAI,SAAAC,GAAI,OACF,IAAbA,EAAK/B,KACL,wBAAIgC,IAAKD,EAAKxH,IACV,2BAAOyB,KAAK,WAAWzB,GAAIwH,EAAKxH,GAAImH,KAAK,GAAG1H,UAAW,SAAWD,EAAaN,IAAKuH,MAAOe,EAAK/B,IAAKZ,QAASyB,EAAWc,QAAS3F,IAAS+F,EAAK/B,IAAK4B,UAAQ,IAC7J,2BAAOC,QAASE,EAAKxH,IAAI,+BAA2B,OAAbpB,EAAoB4I,EAAK7B,QAAuB,OAAb/G,EAAoB4I,EAAK5B,QAAuB,OAAbhH,EAAoB4I,EAAK3B,QAAU2B,EAAK9B,cAKjK,yBAAKjG,UAAW,SAAWD,EAAaN,KACpC,4BAAKM,EAAawG,QAClB,8BACI,2BAAOvE,KAAK,OAAOgF,MAAOT,EAAQ0B,SAtGrC,SAAAxE,GAAC,OAAI+C,EAAU/C,EAAEsD,OAAOC,QAsGiCkB,WAlElD,SAAAzE,GAAqB,UAAVA,EAAEuE,KAAiBd,KAkEiDiB,IAAKtC,IACxF,4BAAQ7D,KAAK,UAAS,yBAAKtB,IAAG,UAAKM,gBAAL,sBAAiDL,IAAI,GAAGyE,QAAS8B,OAGvG,2BAAG,yBAAKxG,IAAG,UAAKM,gBAAL,oBAA+CL,IAAI,QAEhEuC,GACE,yBAAKlD,UAAW,gBAAkBD,EAAaN,KAC3C,yBAAKO,UAAW,UAAYD,EAAaN,KACrC,yBAAKO,UAAW,gBAAkBD,EAAaN,IAAM,QAAQuC,GACzD,4BAAkB,OAAb7C,EAAoB,gCAAS4G,EAAU/D,GAAMkE,QAASnG,EAAa0H,MACrD,OAAbtI,EAAoB,gCAAS4G,EAAU/D,GAAMmE,QAASpG,EAAa0H,MAClD,OAAbtI,EAAoB,gCAAS4G,EAAU/D,GAAMoE,QAASrG,EAAa0H,MAC/D,gCAAS1B,EAAU/D,GAAMiE,QAASlG,EAAa0H,QAGhE9B,EACD,yBAAK3F,UAAW,SAAWD,EAAaN,KACpC,4BAESkH,EAQGF,EAAKqB,KAAI,SAAAtF,GAAG,OACR,wBAAIwF,IAAKxF,EAAIjC,IACT,4BAAkB,OAAbpB,EAAoBqD,EAAI8E,SAAW9E,EAAI9C,OAC5C,yBAAKM,UAAW,aAAeD,EAAaN,IAAKiB,IAAKoB,EAAMU,EAAI4F,QAASC,QAASpB,EAAU7B,QAAS,kBAAMQ,EAAUpD,EAAIjC,KAAKI,IAAI,SAV1I0F,EAAOyB,KAAI,SAAAtF,GAAG,OACV,wBAAIwF,IAAKxF,EAAIjC,IACT,4BAAkB,OAAbpB,EAAoBqD,EAAI8E,SAAW9E,EAAI9C,OAC5C,yBAAKM,UAAW,aAAeD,EAAaN,IAAKiB,IAAKoB,EAAMU,EAAI4F,QAASC,QAASpB,EAAU7B,QAAS,kBAAMQ,EAAUpD,EAAIjC,KAAKI,IAAI,aAgBtK,kBAAC6E,EAAD,CAAS9D,KAAMwB,M,kCCtPdoF,EAAiBC,YAJZ,mBAKLC,EAAkBD,YAJZ,oBAMNE,EAAaF,YALP,oBAkCJG,EArBAC,aAAa,mBAfV,mBAiBG,SAACtJ,EAAOuJ,GACjB,OAAO,eACAvJ,EADP,CACcwJ,OAAO,EAAMC,QAAQ,EAAOpH,MAAM,OAJhC,cAdT,oBAqBG,SAACrC,EAAOuJ,GAClB,OAAO,eACAvJ,EADP,CACcwJ,OAAO,EAAOC,QAAQ,EAAMpH,MAAM,OAThC,cAbT,oBAyBG,SAACrC,EAAOuJ,GAClB,OAAO,eACAvJ,EADP,CACcwJ,OAAO,EAAOC,QAAQ,EAAOpH,MAAM,OAdjC,GANP,CACjBmH,OAAO,EACPC,QAAQ,EACRpH,MAAM,ICZJqH,EAAQ,mBAEDC,EAAQT,YAAaQ,GAAO,SAAAxI,GAAE,OAAIA,KAehC0I,EATIN,YAAc,eAExBI,GAAQ,SAAC1J,EAAOuJ,GAAR,MAAoB,CACzBtJ,QAASsJ,EAAOM,YAPP,CACjB5J,SAAU,I,qGCSd6J,IAAWC,IAAI,CAACC,IAAYC,IAAYC,IAAWC,OAEpC,mBAA6B,IAA1BC,EAAyB,EAAzBA,QAAS7D,EAAgB,EAAhBA,UAGjBzG,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,WAG/CC,EAAgB,CAClBC,GAAI,CACAC,IAAK,IAETG,GAAI,CACAH,IAAK,gBAETI,GAAI,CACAJ,IAAK,gBAETK,GAAI,CACAL,IAAK,iBAIPM,EAAeR,EAAcJ,GAAYI,EAAcJ,GAAYI,EAAa,GAGtF,OACI,oCACiB,UAAZkK,EACG,kBAAC,KAAD,KACI,kBAAC,KAAD,KACI,yBACIzJ,UAAW,QAAUD,EAAaN,IAClCiB,IAAG,UAAKM,gBAAL,wBACHL,IAAI,OAKZ,kBAAC,KAAD,CACI+I,cAAe,EACfC,eAAgB,EAChBC,KAAMH,EAAQ3E,OAAS,EACvB+E,YAAa,EACbC,wBAAsB,EACtBC,YAAU,EAEVC,mBAAiB,EACjBC,MAAO,KAENR,EAAQ3B,KAAI,SAACrF,GAAD,OACT,kBAAC,KAAD,CAAauF,IAAKvF,EAAKlC,IACnB,6BACI,4BAAkB,OAAbpB,EAAoBsD,EAAK6E,SAAW7E,EAAK/C,OAC9C,yBAAKgB,IAnDzB,0BAmDoC+B,EAAK2F,QAASzH,IAAI,WAAWyE,QAAS,kBAAMQ,EAAUnD,EAAKlC,eCtD/G,IAoEe2J,GApEc,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC3BC,EAAUF,EAAM/H,OAAhBiI,MACFzH,EAASkE,SAASuD,GAElBnI,EAAQoI,IAAGC,MAAMH,EAAS7D,OAAQ,CACpCiE,mBAAmB,IAEjBxI,EAAOE,EAAMF,KAAOE,EAAMF,KAAO,IACjCyI,EAAI3D,SAAS9E,GAEb0I,EAAWC,cACX9H,EAAUC,cACV3D,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,WAZH,EAcxByD,mBAAS,IAde,mBAc3C2C,EAd2C,KAcpCkF,EAdoC,OAetB7H,mBAAS,IAfa,mBAe3C4C,EAf2C,KAenCkF,EAfmC,OAgBpB9H,oBAAS,GAhBW,mBAgB3CG,EAhB2C,KAgBlCC,EAhBkC,KAkB5C7C,EAA6B,KAAbnB,EAAA,WAAsBA,GAAa,GAEnDyG,EAAYvC,uBAAY,SAAC9C,GAC3B+E,OAAOwF,SAAS,EAAG,GACnBJ,EAAS1B,EAAMzI,ICzBhB,SAAmBmH,GACtB,IAAIqD,EACAC,EACAC,EACAC,EAAaC,SAASC,OAAOC,MAAM,KAEvC,IAAKN,EAAI,EAAGA,EAAIG,EAAWpG,OAAQiG,IAM/B,GALAC,EAAIE,EAAWH,GAAGO,OAAO,EAAGJ,EAAWH,GAAG1F,QAAQ,MAClD4F,EAAIC,EAAWH,GAAGO,OAAOJ,EAAWH,GAAG1F,QAAQ,KAAO,IAEtD2F,EAAIA,EAAEO,QAAQ,aAAc,OAElB7D,EACN,OAAO8D,SAASP,GDcNQ,CAAU,SAEpB5I,EAAQa,KAAKpD,EAAgBL,EAAmB,IAAMM,KC1C3D,SAAmBmH,EAAMV,EAAO0E,GACnC,IAAIC,EAAU,GACd,GAAID,EAAM,CACN,IAAIE,EAAO,IAAIC,KACfD,EAAKE,QAAQF,EAAKG,UAAmB,GAAPL,EAAY,GAAK,GAAK,KACpDC,EAAU,aAAeC,EAAKI,mBAE9BL,EAAU,GAGdR,SAASC,OAAS1D,EAAO,IAAMV,EAAQ2E,EAAU,WDmCzCM,CAAU,SAAS,EAAM,GACzBvB,EAASpC,QAEd,CAACoC,EAAU7H,EAASvC,IAEjB4L,EAAsB7I,sBAAW,sBAAC,8BAAApB,EAAA,6DACpCkB,GAAW,GADyB,kBAGdpB,EAAgB,GAHF,QAG1BS,EAH0B,QAI5B2J,MAAK,SAAClK,EAAGmK,GAAQ,OAAQnK,EAAEvC,MAAQ0M,EAAE1M,OAAU,EAAKuC,EAAEvC,MAAQ0M,EAAE1M,MAAS,EAAI,MAE3E2M,EAAa7J,EAAI4E,QAAO,SAAAC,GAAI,OAAkB,IAAdA,EAAKrF,MAA4B,IAAdqF,EAAKrF,SACnDmK,MAAK,SAAClK,EAAGmK,GAAQ,OAAOnK,EAAEvC,MAAQ0M,EAAE1M,OAAS,EAAIuC,EAAEvC,MAAQ0M,EAAE1M,MAAQ,EAAI,KACpFmL,EAAU,kBAACyB,GAAD,CAAiB7C,QAAS4C,EAAYzG,UAAWA,KAC3DgF,EAASpI,GATuB,kDAWhCc,MAAM,+EACNuH,EAAU,kBAACyB,GAAD,CAAiB7C,QAAS,WAZJ,QAcpCtG,GAAW,GAdyB,0DAerC,CAACyC,IAUJ,OARApC,qBAAU,WACN,IACI0I,IACF,MAAOzI,GACLH,MAAM,kFAEX,CAAC4I,IAGA,oCACMK,MAAM3J,GACF,kBAAC,EAAD,CAA+BZ,KAAMyI,EAAG/E,MAAOA,EAAOxC,QAASA,EAASyC,OAAQA,EAAQC,UAAWA,IADvF,kBAAC,EAAD,CAA2BhD,OAAQA,MErElD,cAEX,IAAMzD,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,WAG/CC,EAAgB,CAClBC,GAAI,CACAC,IAAK,GACLC,MAAO,4BAEXE,GAAI,CACAH,IAAK,eACLC,MAAO,cAEXG,GAAI,CACAJ,IAAK,eACLC,MAAO,sBAEXI,GAAI,CACAL,IAAK,eACLC,MAAO,uBAITK,EAAeR,EAAcJ,GAAYI,EAAcJ,GAAYI,EAAa,GAGhFe,EAA6B,KAAbnB,EAAA,WAAsBA,GAAa,GACzD,OACI,6BAASoB,GAAG,iBAAiBP,UAAWD,EAAaN,KACjD,yBAAKO,UAAW,MAAQD,EAAaN,KACjC,4BACI,4BAAI,kBAAC,IAAD,CAAMsB,GAAIT,EAAgBL,EAAkBD,UAAW,KAAOD,EAAaN,KAAMM,EAAaL,UAG1G,yBAAKM,UAAW,eAAiBD,EAAaN,KAC1C,yBAAKO,UAAW,SAAWD,EAAaN,KAGpC,4BACIC,MAAM,UACNc,MAAM,OACNC,OAAO,QACPC,IAAI,wCACJC,IAAI,GACJC,YAAY,IACZC,MAAM,2FACNC,iBAAe,QCpDxB,cACX,OAAO,kBAAC,GAAD,OCEI,cAEX,IAAM3B,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,WAG/CC,EAAgB,CAClBC,GAAI,CACAC,IAAK,GACLC,MAAO,qBACP8M,OAAQ,eACR9E,KAAM,4EACN+E,MAAO,4GAEX7M,GAAI,CACAH,IAAK,eACLC,MAAO,kBACP8M,OAAQ,yBACR9E,KAAM,4EACN+E,MAAO,4GAEX5M,GAAI,CACAJ,IAAK,eACLC,MAAO,qBACP8M,OAAQ,qBACR9E,KAAM,4EACN+E,MAAO,4GAEX3M,GAAI,CACAL,IAAK,eACLC,MAAO,qBACP8M,OAAQ,qBACR9E,KAAM,4EACN+E,MAAO,6GAIT1M,EAAeR,EAAcJ,GAAYI,EAAcJ,GAAYI,EAAa,GAGhFe,EAA6B,KAAbnB,EAAA,WAAsBA,GAAa,GAEzD,OACI,6BAASoB,GAAG,iBAAiBP,UAAWD,EAAaN,KACjD,yBAAKO,UAAW,MAAQD,EAAaN,KACjC,4BACI,4BAAI,kBAAC,IAAD,CAAMsB,GAAIT,EAAgBL,EAAeD,UAAW,KAAOD,EAAaN,KAAMM,EAAaL,QAC/F,4BAAI,kBAAC,IAAD,CAAMqB,GAAIT,EAAgBL,EAAgB,mBAAoBF,EAAayM,WAGvF,yBAAKxM,UAAW,eAAiBD,EAAaN,KAC1C,yBAAKO,UAAW,SAAWD,EAAaN,KAGpC,4BACIC,MAAM,UACNc,MAAM,OACNC,OAAO,OACPC,IAAI,4CACJC,IAAI,GACJC,YAAY,IACZC,MAAM,2FACNC,iBAAe,IAEnB,kCAAQf,EAAa2H,KAArB,MAEJ,yBAAK1H,UAAW,SAAWD,EAAaN,KAGpC,4BACIC,MAAM,UACNc,MAAM,OACNC,OAAO,OACPC,IAAI,4CACJC,IAAI,GACJC,YAAY,IACZC,MAAM,2FACNC,iBAAe,IAEnB,kCAAQf,EAAa0M,MAArB,SC9EL,cAEX,IAAMtN,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,WAI/CC,EAAgB,CAClBC,GAAI,CACAC,IAAK,GACLC,MAAO,qBACP8M,OAAQ,eACR9E,KAAM,yFACN+E,MAAO,wEAEX7M,GAAI,CACAH,IAAK,eACLC,MAAO,kBACP8M,OAAQ,yBACR9E,KAAM,yFACN+E,MAAO,wEAEX5M,GAAI,CACAJ,IAAK,eACLC,MAAO,qBACP8M,OAAQ,qBACR9E,KAAM,qBACN+E,MAAO,sBAEX3M,GAAI,CACAL,IAAK,eACLC,MAAO,qBACP8M,OAAQ,qBACR9E,KAAM,qBACN+E,MAAO,uBAIT1M,EAAeR,EAAcJ,GAAYI,EAAcJ,GAAYI,EAAa,GAGhFe,EAA6B,KAAbnB,EAAA,WAAsBA,GAAa,GACzD,OACI,6BAASoB,GAAG,iBAAiBP,UAAWD,EAAaN,KACjD,yBAAKO,UAAW,MAAQD,EAAaN,KACjC,4BACI,4BAAI,kBAAC,IAAD,CAAMsB,GAAIT,EAAgBL,GAAgBF,EAAaL,QAC3D,4BAAI,kBAAC,IAAD,CAAMqB,GAAIT,EAAgBL,EAAgB,kBAAmBD,UAAW,KAAOD,EAAaN,KAAMM,EAAayM,WAG3H,yBAAKxM,UAAW,eAAiBD,EAAaN,KAC1C,yBAAKO,UAAW,SAAWD,EAAaN,KAGpC,4BACIC,MAAM,UACNc,MAAM,OACNC,OAAO,OACPC,IAAI,4CACJC,IAAI,GACJC,YAAY,IACZC,MAAM,2FACNC,iBAAe,IAEnB,kCAAQf,EAAa2H,KAArB,MAGJ,yBAAK1H,UAAW,SAAWD,EAAaN,KAGpC,4BACIC,MAAM,UACNc,MAAM,OACNC,OAAO,OACPC,IAAI,4CACJC,IAAI,GACJC,YAAY,IACZC,MAAM,2FACNC,iBAAe,IAEnB,kCAAQf,EAAa0M,MAArB,SChFL,eAAgB,IACnBC,EADkB,EAAZvC,MACS/H,OAAfsK,KAER,OACI,oCACc,mBAATA,EAA4B,kBAACC,GAAD,MAC3B,kBAACC,GAAD,QCPR9K,GAAM7B,EAEC8B,GAAe,uCAAG,8BAAAE,EAAA,6DACrBC,EADqB,UACVJ,GADU,kCAETQ,IAAMC,IAAIL,GAFD,cAErBM,EAFqB,yBAGpBA,EAAIC,MAHgB,2CAAH,qDAMfC,GAAe,uCAAG,WAAOnC,GAAP,iBAAA0B,EAAA,6DACrBC,EADqB,UACVJ,GADU,qBACMvB,EADN,yBAET+B,IAAMC,IAAIL,GAFD,cAErBM,EAFqB,yBAGpBA,EAAIC,MAHgB,2CAAH,sDC2B5B,I,GAKMoK,GAAoB,SAAAjB,GACtB,GAAIA,EAAM,CACN,IAAIkB,EAAU,KAMd,OAHIA,EAFgB,kBAATlB,EAEGA,EAAKL,QAAQ,KAAM,KAEhBK,EACV,IAAIC,KAAKiB,GAEpB,OAAO,IAAIjB,KAAK,IAEdkB,GAAiB,SAACnB,GAAD,OAAWA,EAAO,GAAK,IAAMA,EAAOA,GAC9CoB,GAAiB,SAACpB,GAAsB,IAAhBqB,EAAe,uDAAR,IAElCC,EAAWL,GAAkBjB,GAC7BuB,EAAkBJ,GAAeG,EAASE,WAAa,GACvDC,EAAgBN,GAAeG,EAASI,WAC9C,OACIJ,EAASK,cAAgBN,EAAOE,EAAkBF,EAAOI,GCvDlD,eAAkC,IAA/BG,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YAEpBtO,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,WAG/CoO,EAAcF,EAAWvI,MAPb,IAOoBwI,EAAc,GAPlC,GAOsDA,GAGlEnN,EAA6B,KAAbnB,EAAA,WAAsBA,GAAa,GAGnDI,EAAgB,CAClBC,GAAI,CACAC,IAAK,GACLY,GAAI,4BAERT,GAAI,CACAH,IAAK,eACLY,GAAI,QAERR,GAAI,CACAJ,IAAK,eACLY,GAAI,sBAERP,GAAI,CACAL,IAAK,eACLY,GAAI,uBAINN,EAAeR,EAAcJ,GAAYI,EAAcJ,GAAYI,EAAa,GAGtF,OACI,oCACKmO,EAAY5F,KAAI,SAAAT,GAAI,OACjB,wBAAIW,IAAKX,EAAK9G,IACV,4BAAKyM,GAAe3F,EAAKsG,aACzB,4BAAI,kBAAC,IAAD,CAAM5M,GAAIT,EAAgBL,EAAe,IAAMoH,EAAK9G,IAAM8G,EAAK3H,QACnE,4BAAI,kBAAC,IAAD,CAAMqB,GAAIT,EAAgBL,EAAe,IAAMoH,EAAK9G,GAAIP,UAAW,KAAOD,EAAaN,KAAOM,EAAaM,WC1CpH,eAAkC,IAA/BmN,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YAEpBtO,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,WAC/CuD,EAAUC,cACV8K,EAAaJ,EAAW1I,OACxB+I,EAAS,GAYTvN,EAA6B,KAAbnB,EAAA,WAAsBA,GAAa,GAEnD2O,EAAWzK,uBAAY,SAAA0K,GACrBA,GAAQ,EAAGlL,EAAQa,KAAKpD,EAAgBL,EAAe,WAClD8N,EAAOF,EAAO/I,OAAQjC,EAAQa,KAAKpD,EAAgBL,EAAe,SAAW4N,EAAO/I,QACxFjC,EAAQa,KAAKpD,EAAgBL,EAAe,SAAW8N,KAC7D,CAACF,EAAQhL,EAASvC,IAGff,EAAgB,CAClBC,GAAI,CACAC,IAAK,IAETG,GAAI,CACAH,IAAK,gBAETI,GAAI,CACAJ,IAAK,gBAETK,GAAI,CACAL,IAAK,iBAIPM,EAAeR,EAAcJ,GAAYI,EAAcJ,GAAYI,EAAa,GAGtF,OACI,oCACI,4BAAI,yBAAK6F,QAAS,kBAAM0I,EAAS,KAAK,yBAAKpN,IAAG,UAAKM,gBAAL,qBAAgDL,IAAI,OAClG,4BAAI,yBAAKyE,QAAS,kBAAM0I,EAAShH,SAAS2G,GAAe,KAAK,yBAAK/M,IAAG,UAAKM,gBAAL,oBAA+CL,IAAI,OAxCxG,SAACiN,GACtB,IAAII,OAAOC,EACgBD,EAAvBJ,EAAa,KAAO,EAAUM,KAAKC,MAAMP,EAAa,IAC9CM,KAAKC,MAAMP,EAAa,GAAK,GAEzC,IAAK,IAAI7C,EAAI,EAAGA,EAAIiD,EAAMjD,IACtB8C,EAAOnK,KAAKqH,EAAI,GAoCfqD,CAAiBR,GAEdC,EAAO/F,KAAI,SAAAT,GAAI,OACX,wBAAIW,IAAKX,EAAMrH,UAAWqH,EAAOtH,EAAaN,KAAK,yBAAK2F,QAAS,kBAAM0I,EAASzG,IAAOrH,UAAWqH,IAASoG,EAAc,KAAO,GAAK1N,EAAaN,KAAO4H,OAIjK,4BAAI,yBAAKjC,QAAS,kBAAM0I,EAAShH,SAAS2G,GAAe,KAAK,yBAAK/M,IAAG,UAAKM,gBAAL,oBAA+CL,IAAI,OACzH,4BAAI,yBAAKyE,QAAS,kBAAM0I,EAASD,EAAO/I,UAAU,yBAAKpE,IAAG,UAAKM,gBAAL,mBAA8CL,IAAI,SCpDzG,eAA2B,IAAxBoN,EAAuB,EAAvBA,KAAMP,EAAiB,EAAjBA,WACdrO,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,WAG/CC,EAAgB,CAClBC,GAAI,CACAC,IAAK,GACLC,MAAO,2BACP2O,OAAQ,SACRC,QAAS,sDACT1C,KAAM,2BACN2C,QAAS,eACTlO,GAAI,gBAERT,GAAI,CACAH,IAAK,eACLC,MAAO,SACP2O,OAAQ,oBACRC,QAAS,WACT1C,KAAM,OACN2C,QAAS,WACTlO,GAAI,QAERR,GAAI,CACAJ,IAAK,eACLC,MAAO,qBACP2O,OAAQ,qBACRC,QAAS,qBACT1C,KAAM,qBACN2C,QAAS,qBACTlO,GAAI,sBAERP,GAAI,CACAL,IAAK,eACLC,MAAO,qBACP2O,OAAQ,qBACRC,QAAS,qBACT1C,KAAM,qBACN2C,QAAS,qBACTlO,GAAI,uBAINN,EAAeR,EAAcJ,GAAYI,EAAcJ,GAAYI,EAAa,GAGhFe,EAA6B,KAAbnB,EAAA,WAAsBA,GAAa,GAEzD,OACI,6BAASoB,GAAG,iBAAiBP,UAAWD,EAAaN,KACjD,yBAAKO,UAAW,MAAQD,EAAaN,KACjC,4BACI,4BAAI,kBAAC,IAAD,CAAMsB,GAAIT,EAAgBL,EAAcD,UAAW,KAAOD,EAAaN,KAAMM,EAAaL,UAGtG,yBAAKM,UAAW,YAAcD,EAAaN,KACvC,8BAAOM,EAAasO,OAApB,IAA4B,gCAASb,EAAW1I,QAAhD,IAAkE/E,EAAauO,SAC/E,+BACI,gHACA,kCACI,yBAAKtK,MAAO,CAAExD,MAAO,SACrB,8BACA,yBAAKwD,MAAO,CAAExD,MAAO,UAEzB,+BACI,4BACI,wBAAIgO,MAAM,OAAOzO,EAAa6L,MAC9B,wBAAI4C,MAAM,OAAOzO,EAAawO,SAC9B,wBAAIC,MAAM,OAAOzO,EAAaM,MAGtC,+BACI,kBAACiJ,GAAD,CAAYkE,WAAYA,EAAYC,YAAaM,MAGzD,yBAAK/N,UAAW,QAAUD,EAAaN,KACnC,4BACI,kBAACgP,GAAD,CAAkBjB,WAAYA,EAAYC,YAAaM,SC9EhE,eAAuB,IAApBnL,EAAmB,EAAnBA,OAAQ8L,EAAW,EAAXA,KAChB7L,EAAUC,cADiB,EAEHC,oBAAS,GAFN,mBAE1BG,EAF0B,KAEjBC,EAFiB,OAGGJ,mBAAS,IAHZ,mBAG1B4L,EAH0B,KAGdC,EAHc,KAK3BzP,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,WAE/CuP,EAAiBxL,sBAAW,sBAAC,4BAAApB,EAAA,6DAC/BkB,GAAW,GADoB,kBAITT,GAAgBE,GAJP,QAIrBJ,EAJqB,SAMvBoM,EAAcpM,GANS,gDAU3Bc,MAAM,qFACNT,EAAQU,SAXmB,QAa/BJ,GAAW,GAboB,yDAchC,CAACP,EAAQC,IAEZW,qBAAU,WACN,IACIqL,IACF,MAAOpL,GACLH,MAAM,+EAEV,OAAO,kBAAMH,GAAW,MACzB,CAAC0L,IAEJ,IAAMvO,EAA6B,KAAbnB,EAAA,WAAsBA,GAAa,GAGnDI,EAAgB,CAClBC,GAAI,CACAC,IAAK,GACLC,MAAO,2BACPqI,KAAM,gBACN+G,KAAM,qBACNC,KAAM,sBAEVnP,GAAI,CACAH,IAAK,eACLC,MAAO,SACPqI,KAAM,OACN+G,KAAM,OACNC,KAAM,QAEVlP,GAAI,CACAJ,IAAK,eACLC,MAAO,qBACPqI,KAAM,qBACN+G,KAAM,qBACNC,KAAM,sBAEVjP,GAAI,CACAL,IAAK,eACLC,MAAO,qBACPqI,KAAM,qBACN+G,KAAM,qBACNC,KAAM,uBAIRhP,EAAeR,EAAcJ,GAAYI,EAAcJ,GAAYI,EAAa,GAGhFuC,EAAM,0BACZ,OACI,6BAASvB,GAAG,iBAAiBP,UAAWD,EAAaN,KACjD,yBAAKO,UAAW,MAAQD,EAAaN,KACjC,4BACI,4BACI,kBAAC,IAAD,CAAMsB,GAAIT,EAAgBL,EAAcD,UAAW,KAAOD,EAAaN,KAClEM,EAAaL,WAK5BwD,GACE,yBAAKlD,UAAW,aAAeD,EAAaN,KACxC,yBAAKO,UAAW,WAAaD,EAAaN,KACtC,4BAAKkP,EAAWjP,OAChB,4BACI,4BAAKK,EAAaL,OAClB,4BAAKsN,GAAe2B,EAAWhB,eAIvC,yBAAK3N,UAAW,cAAgBD,EAAaN,KACxCkP,EAAW9K,SACZ,yBAAK7D,UAAW,OAASD,EAAaN,KACjCkP,EAAWpJ,QAAU,uBAAGyJ,KAAMlN,EAAM6M,EAAWpJ,OAAQ0J,IAAI,sBAAsBlI,OAAO,SAASpD,UAAQ,GACtG,yBACIjD,IAAG,UAAKM,gBAAL,wBACHL,IAAI,cAGZ,8BACKgO,EAAWpJ,QAAU,uBAAGyJ,KAAMlN,EAAM6M,EAAWpJ,OAAQ0J,IAAI,sBAAsBlI,OAAO,SAASpD,UAAQ,GAAEgL,EAAWpJ,WAKnI,yBAAKvF,UAAW,QAAUD,EAAaN,KACnC,kBAAC,IAAD,CAAMsB,GAAIT,EAAgBL,EAAcD,UAAW,KAAOD,EAAaN,KAClEM,EAAagI,MAEjB2G,EAAKK,MAAQ,kBAAC,IAAD,CAAMhO,GAAIT,EAAgBL,EAAe,IAAMyO,EAAKK,KAAM/O,UAAW,KAAOD,EAAaN,KAClGM,EAAagP,MAEjBL,EAAKI,MAAQ,kBAAC,IAAD,CAAM/N,GAAIT,EAAgBL,EAAe,IAAMyO,EAAKI,KAAM9O,UAAW,KAAOD,EAAaN,KAClGM,EAAa+O,QAK9B,kBAACtJ,EAAD,CAAS9D,KAAMwB,MCxHZ,eAAmC,IAAhCiH,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,SACbC,GADqC,EAAdxH,QACbsH,EAAM/H,OAAhBiI,OACFzH,EAASkE,SAASuD,GAIlBnI,EAAQoI,IAAGC,MAAMH,EAAS7D,OAAQ,CACpCiE,mBAAmB,IAEjBuD,EAAO7L,EAAM6L,KAAO7L,EAAM6L,KAAO,IACjCmB,EAAIpI,SAASiH,GAV0B,EAafhL,oBAAS,GAbM,mBAatCG,EAbsC,KAa7BC,EAb6B,OAcTJ,mBAAS,IAdA,mBActCyK,EAdsC,KAc1B2B,EAd0B,KAgBvCC,EAAiB/L,sBAAW,sBAAC,4BAAApB,EAAA,6DAC/BkB,GAAW,GADoB,kBAGTpB,KAHS,QAGrBS,EAHqB,SAKvB2M,EAAc3M,GALS,gDAQ3Bc,MAAM,2FARqB,QAU/BH,GAAW,GAVoB,yDAWhC,IAEHK,qBAAU,WACN4L,MACD,CAACA,IAEJ,IAAMC,EAAkBhM,uBAAY,SAAA9C,GAChC,IAAM+O,EAAM9B,EAAW+B,WAAU,SAAAlI,GAAI,OAAIA,EAAK9G,KAAOA,KACrD,OAAa,IAAT+O,EAGO,CAAER,KAFIQ,IAAQ9B,EAAW1I,OAAS,EAAI0I,EAAW8B,EAAM,GAAG/O,GAAK,KAEvDwO,KADM,IAARO,EAAY9B,EAAW8B,EAAM,GAAG/O,GAAK,MAG3C,CAAEuO,KAAM,KAAMC,KAAM,QAE/B,CAACvB,IAEL,OACI,qCACMtK,GAAW,oCACPqJ,MAAM3J,GACN,kBAAC4M,GAAD,CAAqBzB,KAAMmB,EAAG1B,WAAYA,IAD1B,kBAACiC,GAAD,CAAqB7M,OAAQA,EAAQ8L,KAAMW,EAAgBzM,MAGjF,kBAAC4C,EAAD,CAAS9D,KAAMwB,MCpDZ,cACX,IAAM/D,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,WAG/CC,EAAgB,CAClBC,GAAI,CACAC,IAAK,GACLC,MAAO,MACPgQ,QAAS,8CACTC,SAAU,oDACVC,UAAW,2DAEfhQ,GAAI,CACAH,IAAK,eACLC,MAAO,MACPgQ,QAAS,gBACTC,SAAU,gBACVC,UAAW,kBAEf/P,GAAI,CACAJ,IAAK,eACLC,MAAO,qBACPgQ,QAAS,qBACTC,SAAU,qBACVC,UAAW,sBAEf9P,GAAI,CACAL,IAAK,eACLC,MAAO,qBACPgQ,QAAS,qBACTC,SAAU,qBACVC,UAAW,uBAIb7P,EAAeR,EAAcJ,GAAYI,EAAcJ,GAAYI,EAAa,GAGhFe,EAA6B,KAAbnB,EAAA,WAAsBA,GAAa,GACzD,OACI,6BAASoB,GAAG,iBAAiBP,UAAWD,EAAaN,KACjD,yBAAKO,UAAW,MAAQD,EAAaN,KACjC,4BACI,4BAAI,kBAAC,IAAD,CAAMsB,GAAIT,EAAgBL,EAAWD,UAAW,KAAOD,EAAaN,KAAMM,EAAaL,UAGnG,yBAAKM,UAAW,SAAWD,EAAaN,KACpC,4BACI,4BAAI,uBAAGwP,IAAI,sBAAsBD,KAAK,2DAA2DjI,OAAO,UAAS,2BAAG,yBAAKrG,IAAG,UAAKM,gBAAL,wBAAmDL,IAAI,aAAiBZ,EAAa2P,UACjN,4BAAI,uBAAGT,IAAI,sBAAsBD,KAAK,uIAAuIjI,OAAO,UAAS,2BAAG,yBAAKrG,IAAG,UAAKM,gBAAL,yBAAoDL,IAAI,cAAkBZ,EAAa4P,WAC/R,4BAAI,uBAAGV,IAAI,sBAAsBD,KAAK,8CAA8CjI,OAAO,UAAS,2BAAG,yBAAKrG,IAAG,UAAKM,gBAAL,0BAAqDL,IAAI,eAAmBZ,EAAa6P,gBCrD7M,cACX,OAAO,kBAACC,GAAD,OCKEC,IAJavH,YAHb,eAGgC,SAACwH,EAASrQ,EAAOsQ,EAAMC,GAAvB,MAAwC,CACjFF,UAASrQ,QAAOsQ,OAAMC,kBAGC1H,YANb,gBAMiC,SAAA2H,GAAI,OAAIA,MA0BxCxH,GAhBAC,aAAa,kBAAC,GAjBhB,eAmBG,SAACtJ,EAAOuJ,GAAY,IAAD,EACuBA,EAAOM,QAA7C6G,EADe,EACfA,QAASrQ,EADM,EACNA,MAAOsQ,EADD,EACCA,KAAMC,EADP,EACOA,YAC9B,OAAO,eACA5Q,EADP,CAEIqC,MAAM,EAAMqO,UAASrQ,QAAOsQ,OAAMC,mBANtB,YAAC,GAhBf,gBAyBG,SAAC5Q,EAAOuJ,GAAR,sBACFvJ,EADE,CACKqC,MAAM,OAVA,IARP,CACjBA,MAAM,EACNqO,SAAS,EACTrQ,MAAO,GACPsQ,KAAM,GACNC,YAAa,e,UCLX9O,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,SAAU,CACNC,OAAQF,EAAME,OAAOC,OAAS,OAIvB,eAA6D,IAA1DuO,EAAyD,EAAzDA,QAASrQ,EAAgD,EAAhDA,MAAOsQ,EAAyC,EAAzCA,KAAyC,IAAnCC,mBAAmC,MAArB,aAAqB,EAAXvO,EAAW,EAAXA,KACtDC,EAAUR,KACVuJ,EAAWC,cAEXwF,EAAU9M,uBAAY,kBAAMqH,EAASoF,QAAgB,CAACpF,IACtDtF,EAAU/B,uBAAY,WACxB4M,IACAE,MACD,CAACF,EAAaE,IAEjB,OACI,oCACI,6BACI,6BACI,6BACI,4BAAKzQ,GACL,2BAAIsQ,IAER,6BACKD,GACG,kBAACK,GAAA,EAAD,CAAYhL,QAAS+K,GAArB,sBAEJ,kBAACC,GAAA,EAAD,CAAYhL,QAASA,OAMjC,kBAACxD,EAAA,EAAD,CACI5B,UAAW2B,EAAQL,SACnBI,KAAMA,EACN0D,QAAS+K,MCvCV,cACX,IAAM9Q,EAAQD,aAAY,SAAAC,GAAK,OAAIA,EAAMqJ,UACjChJ,EAA4CL,EAA5CK,MAAOsQ,EAAqC3Q,EAArC2Q,KAAMC,EAA+B5Q,EAA/B4Q,YAAavO,EAAkBrC,EAAlBqC,KAAMqO,EAAY1Q,EAAZ0Q,QACxC,OAAO,kBAACM,GAAD,CAAQN,QAASA,EAASrQ,MAAOA,EAAOsQ,KAAMA,EAAMC,YAAaA,EAAavO,KAAMA,KCHhF,cACX,IAAMrC,EAAQD,aAAY,SAAAC,GAAK,OAAIA,EAAM6D,WACzC,OAAO,kBAACsC,EAAD,CAAS9D,KAAM4O,OAAOC,OAAOlR,GAAOmR,QAAO,SAAC1B,EAAM2B,GAAP,OAAe3B,GAAQ2B,KAAK,MCP5E3O,GAAM7B,EAECyQ,GAAa,uCAAG,yCAAAzO,EAAA,6DAASyF,EAAT,EAASA,KAAMzD,EAAf,EAAeA,SAAU0M,EAAzB,EAAyBA,MAAOC,EAAhC,EAAgCA,MACnD1O,EADmB,UACRJ,GADQ,0BAGnB+O,EAAW,IAAIC,UACZC,OAAO,OAAQrJ,GACxBmJ,EAASE,OAAO,WAAY9M,GAC5B4M,EAASE,OAAO,QAASJ,GACzBE,EAASE,OAAO,QAASH,GAPA,SASPtO,IAAM0O,KAAK9O,EAAO2O,GATX,cASnBrO,EATmB,yBAWlBA,EAAIC,MAXc,4CAAH,sDCNbwO,GAAc,SAACC,GAExB,MADe,wFACDC,KAAKD,IAeVE,GAAqB,SAAA3N,GAAC,OADTuD,EACyBvD,EAAEuE,MADlB,UAAUmJ,KAAKnK,IAAUA,EAAMlC,OAAS,IACdrB,EAAE4N,iBADrC,IAAArK,GCF1B,SAASsK,GAAQjS,EAAOuJ,GACpB,OAAO,eACAvJ,EADP,eAEKuJ,EAAOlB,KAAOkB,EAAO5B,MAAMuK,SAIpC,IAAMpQ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,SAAU,CACN7B,IAAK,GACL8B,OAAQ,QAiPDiQ,GA7OwB,WAEnC,IAAMrS,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,WAC/CsD,EAASxD,aAAY,SAAAC,GAAK,OAAIA,EAAM4J,WAAW3J,WAC/CqC,EAAUR,KACV0B,EAAUC,cACV4H,EAAWC,cAEX8G,EAAapO,uBAAY,kBAAMqH,EAASlC,OAAoB,CAACkC,IAC7DgH,EAAQrO,uBAAY,kBAAMqH,EAASjC,OAAe,CAACiC,IAEnDiH,EAASvS,aAAY,SAAAC,GAAK,OAAIA,EAAMuS,SAClC/I,EAAwB8I,EAAxB9I,MAAOC,EAAiB6I,EAAjB7I,OAAQpH,EAASiQ,EAATjQ,KAZkB,EAcjBmQ,qBAAWP,GAAS,CACxC5J,KAAM,GACNzD,SAAU,GACVvE,MAAO,GACPkR,MAAO,GACPkB,IAAK,GACLnB,MAAO,KApB8B,mBAclCtR,EAdkC,KAc3BuJ,EAd2B,KAsBjClB,EAA6CrI,EAA7CqI,KAAMzD,EAAuC5E,EAAvC4E,SAAUvE,EAA6BL,EAA7BK,MAAOkR,EAAsBvR,EAAtBuR,MAAOkB,EAAezS,EAAfyS,IAAKnB,EAAUtR,EAAVsR,MACrC1I,EAAW,SAACxE,GAAD,OAAOmF,EAAOnF,EAAEsD,SAvBQ,EAyBfhE,oBAAS,GAzBM,mBAyBlCgP,EAzBkC,KAyB3BC,EAzB2B,KA2BnC1R,EAA6B,KAAbnB,EAAA,WAAsBA,GAAa,GAEnD8S,EAAa5O,sBAAW,uCAAC,WAAOI,GAAP,iBAAAxB,EAAA,yDAE3BwB,EAAE4N,iBAEIa,EDvDM,wCAEFf,KAHcD,ECwDUN,IDtDjB,0CACuBO,KAAKD,GCsDvCiB,EAAYlB,GAAYN,GAEjB,KAATjJ,GAA4B,KAAbzD,GAA6B,KAAVvE,GAA0B,KAAVkR,GAAwB,KAARkB,GAAwB,KAAVnB,GAAiBoB,EAP1E,gBAQvBzO,MAAM,6EARiB,0BASjB4O,GAAcC,EATG,iBAUvB7O,MAAM,sHAViB,2BAWjB4O,IAAaC,EAXI,iBAYvB7O,MAAM,gFAZiB,4BAalB4O,GAAcC,EAbI,iBAcvB7O,MAAM,gFAdiB,mDAiBboN,GAAc,CAChBhJ,KAAMA,EACNzD,SAAUA,EACV0M,MAAOA,EACPC,MAAOA,IArBQ,2DAwBnBtN,MAAM,+EAxBa,QA0BvBoH,EAASjC,KACT5F,EAAQa,KAAKpD,EAAgBL,EAAmB,IAAM2C,GA3B/B,kCDpDJ,IAACsO,ICoDG,sBAAD,sDA8B3B,CAACxJ,EAAMzD,EAAU0M,EAAOC,EAAOlG,EAAU7H,EAASD,EAAQmP,EAAOD,EAAKpS,EAAOY,IAE1E8R,EAAW/O,uBAAY,WACzBqH,EAASjC,KACT5F,EAAQa,KAAKpD,EAAgBL,EAAmB,IAAM2C,KACvD,CAAC8H,EAAU7H,EAASD,EAAQtC,IAEzB+R,EAAahP,uBAAY,WAC3BqH,EAASjC,KACT5F,EAAQU,WACT,CAACmH,EAAU7H,IAGRtD,EAAgB,CAClBC,GAAI,CACAC,IAAK,GACL8O,QAAS,2FACT+D,SAAU,GACVC,UAAW,uDACX7K,KAAM,eACN8K,YAAa,oGACbC,OAAQ,eACR/S,MAAO,eACPgT,OAAQ,kCACR9B,MAAO,2BACPD,MAAO,kCACPgC,QAAS,mDACTZ,MAAO,iCACPa,OAAQ,4BAEZhT,GAAI,CACAH,IAAK,eACL8O,QAAS,8BACT+D,SAAU,8BACVC,UAAW,IACX7K,KAAM,OACN8K,YAAa,mEACbC,OAAQ,eACR/S,MAAO,QACPgT,OAAQ,SACR9B,MAAO,QACPD,MAAO,SACPgC,QAAS,iBACTZ,MAAO,UACPa,OAAQ,UAEZ/S,GAAI,CACAJ,IAAK,eACL8O,QAAS,qBACT+D,SAAU,qBACVC,UAAW,qBACX7K,KAAM,qBACN8K,YAAa,qBACbC,OAAQ,qBACR/S,MAAO,qBACPgT,OAAQ,qBACR9B,MAAO,qBACPD,MAAO,qBACPgC,QAAS,qBACTZ,MAAO,qBACPa,OAAQ,sBAEZ9S,GAAI,CACAL,IAAK,eACLoT,QAAS,qBACTC,SAAU,qBACVC,SAAU,qBACV9F,KAAM,qBACN+F,OAAQ,qBACRzE,QAAS,qBACT+D,SAAU,qBACVC,UAAW,qBACX7K,KAAM,qBACN8K,YAAa,qBACbC,OAAQ,qBACR/S,MAAO,qBACPgT,OAAQ,qBACR9B,MAAO,qBACPD,MAAO,qBACPgC,QAAS,qBACTZ,MAAO,qBACPa,OAAQ,uBAIV7S,EAAeR,EAAcJ,GAAYI,EAAcJ,GAAYI,EAAa,GAGtF,OACI,oCACI,yBAAKS,UAAW,QAAUD,EAAaN,KAElCoJ,GACG,yBAAK7I,UAAW,UAAYD,EAAaN,KACrC,4BAAI,0EAAJ,+CACA,wKACA,2BAAG,yBAAKiB,IAAG,UAAKM,gBAAL,wBAAmDL,IAAI,MAClE,kBAAC,IAAD,CAAMI,GAAG,IAAIf,UAAW,OAASD,EAAaN,IAAK2F,QAASqM,GAA5D,4BACA,kBAAC,IAAD,CAAM1Q,GAAG,IAAIf,UAAW,UAAYD,EAAaN,IAAK2F,QAASgN,GAA/D,uBAIPtJ,GACG,yBAAK9I,UAAW,WAAaD,EAAaN,KACtC,yBAAKiB,IAAG,UAAKM,gBAAL,mBAA8CL,IAAI,GAAGqD,MAAO,CAAEC,SAAU,WAAYgP,IAAK,OAAQC,MAAO,QAAU9N,QAASiN,IACrH,OAAblT,GACkB,OAAbA,GACiB,OAAbA,EAFW,oCAAE,4BAAKY,EAAawO,SAAa,4BAAK,6BAAMxO,EAAauS,WAGhE,wBAAItO,MAAO,CAAEmP,WAAY,SAAWpT,EAAawO,SAC/D,0BAAMvO,UAAW,MAAQD,EAAaN,KAAMM,EAAawS,WACzD,wBAAIvS,UAAW,MAAQD,EAAaN,KAChC,4BAAKM,EAAa2H,MAClB,4BACI,2BACI1F,KAAK,OACLwQ,YAAazS,EAAayS,YAC1BxO,MAAO,CAAExD,MAAO,QAChBkH,KAAK,OACLV,MAAOU,EACPO,SAAUA,MAItB,4BACI,4BAAKlI,EAAa0S,OAAlB,KACA,4BAAI,2BAAOzQ,KAAK,OAAOgC,MAAO,CAAExD,MAAO,QAAUkH,KAAK,WAAWV,MAAO/C,EAAUgE,SAAUA,MAEhG,4BACI,4BAAKlI,EAAaL,OAClB,4BAAI,2BAAOsC,KAAK,OAAOgC,MAAO,CAAExD,MAAO,QAAUkH,KAAK,QAAQV,MAAOtH,EAAOuI,SAAUA,MAE1F,4BACI,4BAAKlI,EAAa2S,OAAlB,KACA,4BAAI,2BAAO1Q,KAAK,MAAMgC,MAAO,CAAExD,MAAO,QAAUkH,KAAK,QAAQV,MAAO4J,EAAO3I,SAAUA,EAAUmL,UAAWhC,OAE9G,4BACI,4BAAKrR,EAAa6Q,MAAlB,KACA,4BAAI,2BAAO5O,KAAK,MAAMgC,MAAO,CAAExD,MAAO,QAAUkH,KAAK,MAAMV,MAAO8K,EAAK7J,SAAUA,EAAUmL,UAAWhC,OAE1G,4BACI,4BAAKrR,EAAa4Q,MAAlB,KACA,4BACI,2BAAO3O,KAAK,QAAQgC,MAAO,CAAExD,MAAO,QAAUkH,KAAK,QAAQV,MAAO2J,EAAO1I,SAAUA,MAG3F,yBAAKjI,UAAW,UAAYD,EAAaN,KACrC,oCAAOM,EAAa4S,SACpB,8BACI,gCAAS5S,EAAa4S,SAD1B,y5CAYA,4BACI,qCAAmB5S,EAAagS,MAChC,2BAAO/P,KAAK,WAAWzB,GAAG,KAAKmH,KAAK,GAAG1H,UAAW,SAAWD,EAAaN,IAAK2F,QAAS,kBAAM4M,GAAUD,MACxG,2BAAOlK,QAAQ,MAAK,+BAApB,OAGR,kBAAC,IAAD,CAAM9G,GAAG,IAAIf,UAAW,OAASD,EAAaN,IAAK2F,QAAS6M,GAAalS,EAAa6S,OAAtF,OAIZ,kBAAChR,EAAA,EAAD,CACI5B,UAAW2B,EAAQL,SAAWvB,EAAaN,IAC3CiC,KAAMA,EACN0D,QAASsM,MC9PV,eAAqC,IAAlC2B,EAAiC,EAAjCA,eAAgBC,EAAiB,EAAjBA,WACxBnU,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,WAE/CC,EAAgB,CAClBC,GAAI,CACAC,IAAK,IAETG,GAAI,CACAH,IAAK,gBAETI,GAAI,CACAJ,IAAK,gBAETK,GAAI,CACAL,IAAK,iBAIPM,EAAeR,EAAcJ,GAAYI,EAAcJ,GAAYI,EAAa,GAGtF,OACI,oCACI,4BACI,kBAAC,IAAD,CAAMwB,GAAG,IAAIqE,QAASkO,GAClB,yBAAK5S,IAAG,UAAKM,gBAAL,oBAA+CL,IAAI,KAC3D,yBAAKD,IAAG,UAAKM,gBAAL,wBAAmDL,IAAI,OAGvE,yBAAKX,UAAW,SAAWD,EAAaN,KACpC,4BAAQwI,SAAUoL,EAAgBrM,MAAO7H,EAAUa,UAAW,gBAAkBD,EAAaN,KACzF,4BAAQuH,MAAM,MAAd,sBACA,4BAAQA,MAAM,MAAd,YAIJ,yBAAKhH,UAAW,gBAAkBD,EAAaN,SCrChD,eAAwB,IAArB2F,EAAoB,EAApBA,QAASiC,EAAW,EAAXA,KACjBkM,EAAelM,EAAKM,QAAU,KAAO,GACrCxI,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,WAE/CC,EAAgB,CAClBC,GAAI,CACAC,IAAK,IAETG,GAAI,CACAH,IAAK,gBAETI,GAAI,CACAJ,IAAK,gBAETK,GAAI,CACAL,IAAK,iBAIPM,EAAeR,EAAcJ,GAAYI,EAAcJ,GAAYI,EAAa,GAGhFe,EAA6B,KAAbnB,EAAA,WAAsBA,GAAa,GACzD,OACI,4BACI,kBAAC,IAAD,CAAM4B,GAAIT,EAAgB+G,EAAKmM,KAAMxT,UAAWuT,EAAexT,EAAaN,IAAK2F,QAAS,kBAAMA,EAAQiC,EAAK9G,MAC3F,OAAbpB,EACKkI,EAAKzH,GACQ,OAAbT,EACAkI,EAAKxH,GACQ,OAAbV,EACAkI,EAAKvH,GACLuH,EAAK7H,MC/BZ,eAAsC,IAAnCiU,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,QAASC,EAAe,EAAfA,SAC3BxU,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,WAG/CC,EAAgB,CAClBC,GAAI,CACAC,IAAK,GACLC,MAAO,4BAEXE,GAAI,CACAH,IAAK,eACLC,MAAO,cAEXG,GAAI,CACAJ,IAAK,eACLC,MAAO,sBAEXI,GAAI,CACAL,IAAK,eACLC,MAAO,uBAITK,EAAeR,EAAcJ,GAAYI,EAAcJ,GAAYI,EAAa,GAGtF,OACI,yBAAKgB,GAAG,MAAMP,UAAWD,EAAaN,KAClC,8BACI,uBAAGuP,KAAK,2DAA2DjI,OAAO,SAASkI,IAAI,uBAAuB,yBAAKvO,IAAG,UAAKM,gBAAL,uBAAkDL,IAAI,MAC5K,uBAAGqO,KAAK,uIAAuIjI,OAAO,SAASkI,IAAI,uBAAuB,yBAAKvO,IAAG,UAAKM,gBAAL,wBAAmDL,IAAI,MACzP,uBAAGqO,KAAK,8CAA8CjI,OAAO,SAASkI,IAAI,uBAAuB,yBAAKvO,IAAG,UAAKM,gBAAL,yBAAoDL,IAAI,OAErK,4BACK+S,EAAQ5L,KAAI,SAAAT,GAAI,OACb,kBAACuM,GAAD,CAAe5L,IAAKX,EAAK9G,GAAI6E,QAASuO,EAAUtM,KAAMA,EAAMoM,SAAUA,UCjCpFI,GAAoB,CAAC,MAAO,MAAO,MAAO,OAiFjCC,GA/EA,WACX,IAAM1J,EAAW2J,cACXlR,EAAUC,cAGVuQ,EAAiBhQ,uBAAY,SAAAI,GAE/B,IAAMuQ,EAAWH,GAAkBrD,QAAO,SAAC1B,EAAM2B,GAC7C,OAAO3B,EAAKvD,QAAQkF,EAAK,MAC1BrG,EAAS6J,UACZpR,EAAQa,KAAK,WAAID,EAAEsD,OAAOC,OAAUgN,EAAW5J,EAAS7D,UACzD,CAAC6D,EAAUvH,IAXG,EAaaE,mBAAS,CACnC,CACIxC,GAAI,EACJf,GAAI,iCACJI,GAAI,kBACJC,GAAI,qBACJC,GAAI,qBACJ0T,KAAMvT,EACN0H,SAAS,GAEb,CACIpH,GAAI,EACJf,GAAI,2BACJI,GAAI,aACJC,GAAI,qBACJC,GAAI,qBACJ0T,KAAMvT,EACN0H,SAAS,GAEb,CACIpH,GAAI,EACJf,GAAI,uCACJI,GAAI,oBACJC,GAAI,qBACJC,GAAI,qBACJ0T,KAAMvT,EACN0H,SAAS,GAEb,CACIpH,GAAI,EACJf,GAAI,yCACJI,GAAI,SACJC,GAAI,qBACJC,GAAI,qBACJ0T,KAAMvT,EACN0H,SAAS,GAEb,CACIpH,GAAI,EACJf,GAAI,MACJI,GAAI,MACJC,GAAI,qBACJC,GAAI,qBACJ0T,KAAMvT,EACN0H,SAAS,KAzDA,mBAaV+L,EAbU,KAaDQ,EAbC,KA6DXP,EAAWtQ,uBAAY,SAAA9C,GACzB2T,EACIR,EAAQ5L,KAAI,SAAAT,GAAI,OACZA,EAAK9G,KAAOA,EAAZ,eAAsB8G,EAAtB,CAA4BM,SAAS,IAArC,eAAmDN,EAAnD,CAAyDM,SAAS,UAG3E,CAAC+L,IAIJ,OACI,gCACI,kBAACS,GAAD,CAAYd,eAAgBA,EAAgBC,WAJjC,kBAAMY,EAAWR,EAAQ5L,KAAI,SAAAT,GAAI,sBAAUA,EAAV,CAAgBM,SAAS,WAKrE,kBAACyM,GAAD,CAAWV,QAASA,EAASC,SAAUA,MC9EtCU,GAAc9L,YAHN,yBAGiC,SAAA+L,GAAM,OAAIA,KAiBjDnV,GAXEwJ,YAAc,eATV,yBAWG,SAACtJ,EAAOuJ,GAAR,MACZ,CAEItJ,QAASsJ,EAAOM,YATX,CACjB5J,QAAS,KCePiV,GAAgB,CAAC,KAAM,KAAM,KAAM,MAkD1BC,GAhDH,SAAC,GAAe,IAAbrK,EAAY,EAAZA,MACLsK,EAAgB9J,cACdxL,EAAagL,EAAM/H,OAAnBjD,SAEFE,EAAQkV,GAAc9N,MAAK,SAAAY,GAAI,OAAIA,IAASlI,KAGlDqE,qBAAU,WACFnE,GAGAoV,EAAcJ,GAAYhV,MAE/B,CAACoV,EAAepV,IAEnBmE,qBAAU,YPnBU,WACpB,IAAMkR,EAAYC,UAAUC,UAC5B,OAA6K,MAAtKF,EAAUvK,MAAM,oJACqB,MAAzCuK,EAAUvK,MAAM,uBOiBZ0K,KACCvP,OAAO8E,SAAS4E,KAAO,sCAI/B,IAAM8F,EAAazV,EAAK,WAAOA,GAAU,GACnC0V,EAAW1V,EAAK,UAAMA,GAAU,KAEtC,OACI,oCACI,0BAAM4P,IAAI,aAAajN,KAAK,WAAWgN,KAAI,UAAKhO,gBAAL,wBAA2C+T,EAA3C,cAC3C,0BAAM9F,IAAI,aAAajN,KAAK,WAAWgN,KAAI,UAAKhO,gBAAL,wBAA2C+T,EAA3C,iBAC3C,yBAAK/U,UAAWb,GACZ,kBAAC,GAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOqU,KAAMsB,EAAa7U,EAAa+U,UAAW/T,EAAUgU,OAAK,IACjE,kBAAC,IAAD,CAAOzB,KAAMsB,EAAa7U,EAAmB,WAAY+U,UAAW9K,KACpE,kBAAC,IAAD,CAAOsJ,KAAMsB,EAAa7U,EAAkB+U,UAAWE,KACvD,kBAAC,IAAD,CAAO1B,KAAMsB,EAAa7U,EAAgB,UAAW+U,UAAWG,KAChE,kBAAC,IAAD,CAAO3B,KAAMsB,EAAa7U,EAAe,WAAY+U,UAAWI,KAChE,kBAAC,IAAD,CAAO5B,KAAMsB,EAAa7U,EAAW+U,UAAWK,KAChD,kBAAC,IAAD,CAAOL,UAAW9V,KAGtB,kBAAC,GAAD,MACA,kBAACoW,GAAD,MACA,kBAACC,GAAD,SCnEIC,QACa,cAA7BlQ,OAAO8E,SAASqL,UAEiB,UAA7BnQ,OAAO8E,SAASqL,UAEhBnQ,OAAO8E,SAASqL,SAAStL,MACrB,2D,gBCyBGjH,IA1BaqF,YAHN,yBAKlB,SAACmN,GAAD,OAAiBA,KAGQnN,YAPN,0BASnB,SAACmN,GAAD,OAAiBA,KAKL/M,aAAa,kBAAC,GAfR,yBAiBG,SAACtJ,EAAOuJ,GAAR,sBACVvJ,EADU,eAEZuJ,EAAOM,SAAU,OAJD,YAAC,GAdP,0BAoBG,SAAC7J,EAAOuJ,GAAR,sBACXvJ,EADW,eAEbuJ,EAAOM,SAAU,OARD,IAFR,KCCNyM,GARKC,aAAgB,CAChC1S,WACAwF,UACAkJ,QACAzS,YACA8J,eCME4M,GAAQC,aACVH,IAGJI,IAASC,OACL,kBAAC,IAAD,CAAUH,MAAOA,IACb,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOrC,KAAK,cAAcwB,UAAWR,OAG7CrJ,SAAS8K,eAAe,SH2FpB,kBAAmBtB,WACnBA,UAAUuB,cAAcC,MACnBC,MAAK,SAACC,GACHA,EAAaC,gBAEhBC,OAAM,SAACC,GACJC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.a0ad0210.chunk.js","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport '../static/stylesheets/Error.css';\n\nconst ErrorPage = () => {\n    const language = useSelector(state => state.language.current);\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\",\n            title: \"에러 페이지\",\n            content: \"페이지를 찾을 수 없습니다.\"\n        },\n        en: {\n            css: \" language-en\",\n            title: \"Error Page\",\n            content: \"Page Not Found.\"\n        },\n        cn: {\n            css: \" language-cn\",\n            title: \"중국어\",\n            content: \"중국어\"\n        },\n        jp: {\n            css: \" language-jp\",\n            title: \"일본어\",\n            content: \"일본어\"\n        }\n    }\n    \n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    return (\n        <div className={\"ERROR\" + current_pack.css}>\n            <h1 className={\"title\" + current_pack.css}>{current_pack.title}</h1>\n            <p className={\"warning\" + current_pack.css}>{current_pack.content}</p>\n        </div>\n    );\n};\n\nexport default ErrorPage;","export const Paths = {\n    index: '/',\n    exhibition: '/Online-Exhibition',\n    session: '/Opening-Session',\n    conference: '/Conference',\n    notice: '/Notice',\n    sns: '/SNS',\n    api: 'http://14.63.174.102:84/api/v1',\n    storage: 'http://14.63.174.102:64/'\n};","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nimport { Paths } from '../paths/index'\n\n\nexport default () => {\n\n    const language = useSelector(state => state.language.current);\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\",\n            movie_name: \"<제 2회 6차산업제주국제박람회>\",\n            online_go: \"온라인전시관\",\n            conference_go: \"컨퍼런스\",\n            go: \"바로가기\"\n        },\n        en: {\n            css: \" language-en\",\n            movie_name: \"<title>\",\n            online_go: \"Online-Exhibition\",\n            conference_go: \"Conference\",\n            go: \"Go\"\n        },\n        cn: {\n            css: \" language-cn\",\n            movie_name: \"중국어\",\n            online_go: \"중국어\",\n            conference_go: \"중국어\",\n            go: \"중국어\"\n        },\n        jp: {\n            css: \" language-jp\",\n            movie_name: \"일본어\",\n            online_go: \"일본어\",\n            conference_go: \"일본어\",\n            go: \"일본어\"\n        }\n    }\n\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\n\n    return (\n        <section id=\"main_container\" className={current_pack.css}>\n            <div className={\"main_content\" + current_pack.css}>\n                <div className={\"movie\" + current_pack.css}>\n                    {/* <i></i>\n                    <img src={`${process.env.PUBLIC_URL}/img/bg_movie.png`} alt=\"\" /> */}\n                    <iframe\n                        title=\"youtube\"\n                        width=\"100%\"\n                        height=\"100%\"\n                        src=\"https://www.youtube.com/embed/RIweUEaE2xw\" //비디오 링크가  cms에 추가하는 것이 없음\n                        alt=\"\"\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                    ></iframe>\n                    {/* <span> {current_pack.movie_name} </span> */}\n                </div>\n                <div className={\"right\" + current_pack.css}>\n                    <Link to={LANGUAGE_PATH + Paths.exhibition} >\n                        <div className={\"onlinego\" + current_pack.css}>\n                            <i></i>\n                            <img src={`${process.env.PUBLIC_URL}/img/bg_onlinego.png`} alt=\"\" />\n                            <h3>{current_pack.online_go}</h3>\n                            <span>{current_pack.go}  {'>'}</span>\n                        </div>\n                    </Link>\n                    <Link to={LANGUAGE_PATH + Paths.conference} >\n                        <div className={\"confgo\" + current_pack.css}>\n                            <i></i>\n                            <img src={`${process.env.PUBLIC_URL}/img/bg_confgo.png`} alt=\"\" />\n                            <h3>{current_pack.conference_go}</h3>\n                            <span>{current_pack.go}  {'>'}</span>\n                        </div>\n                    </Link>\n                </div>\n            </div>\n        </section>\n    )\n}","import React from 'react';\nimport HomeContainer from '../container/HomeContainer'\n\nconst HomePage = () => {\n    return (\n        <HomeContainer />\n    )\n};\n\nexport default HomePage;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n/* Library */\n\nimport { Backdrop, CircularProgress } from '@material-ui/core';\n/* Components */\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff'\n    },\n}));\n\nexport default ({ open }) => {\n    const classes = useStyles();\n    return (\n        <Backdrop className={classes.backdrop} open={open}>\n            <CircularProgress color=\"inherit\" />\n        </Backdrop>\n    );\n};\n","import Axios from \"axios\";\n\nimport { Paths } from '../paths/index'\n\nconst URL = Paths.api\n\nexport const getDocumentList = async (type) => {\n    const query = `${URL}/document`;\n    const config = {\n        params: {\n            module_id: 1,\n            type: type\n        }\n    };\n    const res = await Axios.get(query, config);\n    return res.data\n}\n\nexport const getShowDocument = async (id) => {\n    const query = `${URL}/document/${id}`\n    const res = await Axios.get(query)\n    return res.data\n}","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Loading from '../components/assets/Loading'\r\n\r\nimport { getShowDocument } from '../api/OnlineExhibitionAPI'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst OnlineExhibitionContainer = ({ viewId }) => {\r\n\r\n    const URL = \"http://14.63.174.102:84\";\r\n    const history = useHistory()\r\n\r\n    const [booth, setBooth] = useState({});\r\n\r\n    const language = useSelector(state => state.language.current);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const showingDocument = useCallback(async () => {\r\n        setLoading(true);\r\n        try {\r\n            const res = await getShowDocument(viewId);\r\n            setBooth(res);\r\n        } catch (e) {\r\n            alert('찾으시는 부스가 존재하지 않습니다.')\r\n            history.goBack()\r\n        }\r\n        setLoading(false);\r\n    }, [viewId, history])\r\n\r\n    useEffect(() => {\r\n        try {\r\n            showingDocument();\r\n        } catch (e) {\r\n            alert('서버에 오류가 발생했습니다.');\r\n        }\r\n    }, [showingDocument]);\r\n\r\n    const type = [];\r\n    if (booth.type === 0) {\r\n        type.push('온라인 전시')\r\n        type.push('Online-Exhibition')\r\n        type.push('중국어')\r\n        type.push('일본어')\r\n    }\r\n    else if (booth.type === 1) {\r\n        type.push('음료,차류')\r\n        type.push('Beverages/Tea')\r\n        type.push('중국어')\r\n        type.push('일본어')\r\n    }\r\n    else if (booth.type === 2) {\r\n        type.push('전통식품')\r\n        type.push('Traditional Foods')\r\n        type.push('중국어')\r\n        type.push('일본어')\r\n    }\r\n    else if (booth.type === 3) {\r\n        type.push('가공식품')\r\n        type.push('Processed Foods')\r\n        type.push('중국어')\r\n        type.push('일본어')\r\n    }\r\n    else if (booth.type === 4) {\r\n        type.push('건강식품')\r\n        type.push('Healthy Foods & supplements')\r\n        type.push('중국어')\r\n        type.push('일본어')\r\n    }\r\n    else if (booth.type === 5) {\r\n        type.push('주류')\r\n        type.push('Alcoholic drinks')\r\n        type.push('중국어')\r\n        type.push('일본어')\r\n    }\r\n    else if (booth.type === 6) {\r\n        type.push('간식')\r\n        type.push('Snacks')\r\n        type.push('중국어')\r\n        type.push('일본어')\r\n    }\r\n    else if (booth.type === 7) {\r\n        type.push('화장품')\r\n        type.push('Cosmetics')\r\n        type.push('중국어')\r\n        type.push('일본어')\r\n    }\r\n    else if (booth.type === 8) {\r\n        type.push('천연염색')\r\n        type.push('Dyed products')\r\n        type.push('중국어')\r\n        type.push('일본어')\r\n    }\r\n    else if (booth.type === 9) {\r\n        type.push('마을공동체')\r\n        type.push('Local community')\r\n        type.push('중국어')\r\n        type.push('일본어')\r\n    }\r\n    else if (booth.type === 10) {\r\n        type.push('유제품')\r\n        type.push('Dairy products')\r\n        type.push('중국어')\r\n        type.push('일본어')\r\n    }\r\n\r\n    //--------------------------------------------------------------------------------------\r\n    const LANGUAGE_PACK = {\r\n        kr: {\r\n            css: \"\",\r\n            download: \"카탈로그 보기\"\r\n        },\r\n        en: {\r\n            css: \" language-en\",\r\n            download: \"View Catalog\"\r\n        },\r\n        cn: {\r\n            css: \" language-cn\",\r\n            download: \"\"\r\n        },\r\n        jp: {\r\n            css: \" language-jp\",\r\n            download: \"\"\r\n        }\r\n    }\r\n\r\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\r\n    //--------------------------------------------------------------------------------------\r\n\r\n    const videoType = (link) => {\r\n        const LINK = String(link)\r\n        if (LINK.lastIndexOf(\"embed\") !== -1) {    //유튜브 embed링크로 넘어오는 경우\r\n            return <iframe\r\n                title=\"youtube\"\r\n                width=\"660\"\r\n                height=\"376\"\r\n                src={link} //비디오 링크가  cms에 추가하는 것이 없음\r\n                alt=\"\"\r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen\r\n            />\r\n        }\r\n        else if (LINK.length !== 0) {  //유튜브 링크로 넘어오는 경우\r\n            const lastSlash = LINK.lastIndexOf('/')\r\n            const videoID = LINK.slice(lastSlash, LINK.length)\r\n            return <iframe\r\n                title=\"youtube\"\r\n                width=\"660\"\r\n                height=\"376\"\r\n                src={\"https://www.youtube.com/embed\" + videoID}\r\n                alt=\"\"\r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen\r\n            />\r\n        }\r\n        else {  //파일, 링크 두 가지 다 없는 경우 => \r\n            return <img src={`${process.env.PUBLIC_URL}/img/ic_check_on.png`} alt=\"\" width=\"660\" height=\"376\" />    //에러 이미지\r\n        }\r\n    }\r\n\r\n    return (\r\n        <section id=\"ex_container\" className={current_pack.css}>\r\n            {!loading &&\r\n                <>\r\n                    <h2>{language === 'en' ? type[1]\r\n                        : language === 'cn' ? type[2]\r\n                            : language === 'jp' ? type[3]\r\n                                : type[0]}ㅣ{language === 'en' ? booth.contents_en\r\n                                    : booth.contents}</h2>\r\n                    <div className={\"people\" + current_pack.css}>\r\n                        <span>\r\n                            <img src={`${process.env.PUBLIC_URL}/img/img_peo_left.png`} alt=\"\" />\r\n                        </span>\r\n                        <span>\r\n                            <img src={`${process.env.PUBLIC_URL}/img/img_peo_right.png`} alt=\"\" />\r\n                        </span>\r\n                    </div>\r\n                    <div className={\"left\" + current_pack.css}>\r\n                        {booth.photo_4 && <img src={URL + booth.photo_4} alt=\"\" />}\r\n\r\n                    </div>\r\n                    <div className={\"right\" + current_pack.css}>\r\n                        {booth.photo_4 && <img src={URL + booth.photo_3} alt=\"\" />}\r\n                    </div>\r\n                    <div className={\"spot\" + current_pack.css}>\r\n                        <i\r\n                            style={{ position: \"absolute\", bottom: \"250px\", width: \"100%\", margin: \"0 auto\", textAlign: \"center\", left: \"0px\", zIndex: \"30\" }}>\r\n                            {booth.photo_1 && <img\r\n                                style={{ display: \"block\", maxWidth: \"100%\", maxHeight: \"160px\", margin: \"0 auto\", textAlign: \"center\" }}\r\n                                src={URL + booth.photo_1}\r\n                                alt=\"\"\r\n                            />}\r\n                        </i>\r\n                        <span><img src={`${process.env.PUBLIC_URL}/img/img_center_booth.png`} alt=\"\" /></span>\r\n                        <div className={\"center\" + current_pack.css}>\r\n                            {videoType(booth.youtube_link)}\r\n                        </div>\r\n                        <div className={\"button-area\"}>\r\n                            <button className={\"buy\" + current_pack.css} onClick={booth.link ?\r\n                                (booth.link.indexOf(\"http\") !== -1) ?\r\n                                () => window.open(booth.link, '_blank') : () => window.open(\"http://\" + booth.link, '_blank')\r\n                                : () => {}}\r\n                            \r\n                            >\r\n                                \r\n                                {language === 'en' ? \"Purchase\"\r\n                                    : language === 'cn' ? \"중국어\"\r\n                                        : language === 'jp' ? \"일본어\"\r\n                                            : \"구매하러 가기\"} {'>'}\r\n                            </button>\r\n                            <button className={\"buy\" + current_pack.css} onClick={() => window.open(URL + booth.file_1, '_blank')}>{current_pack.download} {'>'}</button>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            }\r\n            <Loading open={loading} />\r\n        </section >\r\n    );\r\n};\r\n\r\nexport default OnlineExhibitionContainer;","import React, { useState, useCallback, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Loading from '../components/assets/Loading';\nimport { useHistory } from 'react-router-dom';\nimport { Paths } from '../paths';\n\n\nconst OnlineExhibitionListContainer = ({ type, items, loading, swiper, firstOpen }) => {\n\n    const URL = \"http://14.63.174.102:84\";\n    const history = useHistory();\n    const language = useSelector(state => state.language.current);\n    const inputRef = useRef();\n\n    const leftLists = [\n        {\n            num: 0,\n            id: \"c1\",\n            kr_text: \"온라인 전시\",\n            en_text: \"Online-Exhibition\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 1,\n            id: \"c8\",\n            kr_text: \"음료,차류\",\n            en_text: \"Beverages/Tea\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 2,\n            id: \"c6\",\n            kr_text: \"전통식품\",\n            en_text: \"Traditional Foods\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 3,\n            id: \"c2\",\n            kr_text: \"가공식품\",\n            en_text: \"Processed Foods\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 4,\n            id: \"c4\",\n            kr_text: \"건강식품\",\n            en_text: \"Healthy Foods & supplements\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 5,\n            id: \"c7\",\n            kr_text: \"주류\",\n            en_text: \"Alcoholic drinks\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 6,\n            id: \"c3\",\n            kr_text: \"간식\",\n            en_text: \"Snacks\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 7,\n            id: \"c10\",\n            kr_text: \"화장품\",\n            en_text: \"Cosmetics\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 8,\n            id: \"c11\",\n            kr_text: \"유제품\",\n            en_text: \"Dairy products\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 9,\n            id: \"c9\",\n            kr_text: \"천연염색\",\n            en_text: \"Dyed products\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        },\n        {\n            num: 10,\n            id: \"c5\",\n            kr_text: \"마을공동체\",\n            en_text: \"Local community\",\n            cn_text: \"중국어\",\n            jp_text: \"일본어\"\n        }\n    ]\n    const [result, setResult] = useState([]);\n    const [search, setSearch] = useState('');\n    const [find, setFind] = useState([]);\n    const [exist, setExist] = useState(false);\n\n    const onChange = e => setSearch(e.target.value);\n    const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\n\n    const listClick = e => {\n        setFind([]); setSearch(''); setExist(false);\n        history.push(LANGUAGE_PATH + Paths.exhibition + '?type=' + parseInt(e.target.value));\n    };\n\n    const imgError = useCallback((e) => {\n        e.target.src = URL + \"/data/uploaded/documents-photo_1-882.jpeg?v=1602807638\";\n    }, []);\n\n    const findList = useCallback(() => {\n        // 아무것도 입력 없이 찾기버튼을 눌렀을 때\n        if (search === '') setExist(false);\n\n        // 입력이 있을경우 언어별로 판단\n        if (language === 'en') {\n            const findItem = items.filter(item => item.title_en.toLowerCase().indexOf(search.toLowerCase()) > -1)\n            if (findItem.length === 0) { alert(\"The booth does not exist.\"); setFind([]); setSearch(''); setExist(false); inputRef.current.focus(); }\n            else { setExist(true); setFind(findItem); }\n        } else if (language === 'cn') {\n            const findItem = items.filter(item => item.title.indexOf(search) > -1)\n            if (findItem.length === 0) { alert(\"중국어\"); setFind([]); setSearch(''); setExist(false); inputRef.current.focus(); }\n            else { setExist(true); setFind(findItem); }\n        } else if (language === 'jp') {\n            const findItem = items.filter(item => item.title.indexOf(search) > -1)\n            if (findItem.length === 0) { alert(\"일본어\"); setFind([]); setSearch(''); setExist(false); inputRef.current.focus(); }\n            else { setExist(true); setFind(findItem); }\n        } else {\n            const findItem = items.filter(item => item.title.indexOf(search) > -1)\n            if (findItem.length === 0) { alert(\"검색하신 부스가 존재하지 않습니다.\"); setFind([]); setSearch(''); setExist(false); inputRef.current.focus(); }\n            else { setExist(true); setFind(findItem); }\n        }\n    }, [search, language, items])\n\n    const handleKeyPrress = e => { if (e.key === 'Enter') findList(); }\n\n    useEffect(() => {\n        if (!loading) {\n            if (type === 0) { setResult([]); setResult(items); }\n            else if (type === 8) {\n                setResult([]); setResult(items.filter(item => item.type === 10));\n            } else if (type === 9) {\n                setResult([]); setResult(items.filter(item => item.type === 8));\n            } else if (type === 10) {\n                setResult([]); setResult(items.filter(item => item.type === 9));\n            } else { setResult([]); setResult(items.filter(item => item.type === type)); }\n        }\n    }, [loading, type, items]);\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\",\n            title: \"온라인전시관\",\n            unit: \"관\",\n            search: \"부스명 검색\"\n        },\n        en: {\n            css: \" language-en\",\n            title: \"Online Exhibition\",\n            unit: \"\",\n            search: \"Booth name search\"\n        },\n        cn: {\n            css: \" language-cn\",\n            title: \"중국어\",\n            unit: \"중국어\",\n            search: \"중국어\"\n        },\n        jp: {\n            css: \" language-jp\",\n            title: \"일본어\",\n            unit: \"일본어\",\n            search: \"일본어\"\n        }\n    }\n\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    return (\n        <section id=\"on_ex_container\" className={current_pack.css}>\n            <div className={\"left_section\" + current_pack.css}>\n                <h2>\n                    <input type=\"checkbox\" id=\"c1\" name=\"\" className={\"leftch\" + current_pack.css} value={0} onClick={listClick} checked={type === 0} readOnly />\n                    <label htmlFor=\"c1\"><span></span>{current_pack.title}</label>\n                </h2>\n                <ul>\n                    {leftLists.map(list => (\n                        list.num !== 0 &&\n                        <li key={list.id}>\n                            <input type=\"checkbox\" id={list.id} name=\"\" className={\"leftch\" + current_pack.css} value={list.num} onClick={listClick} checked={type === list.num} readOnly />\n                            <label htmlFor={list.id}><span></span>{language === 'en' ? list.en_text : language === 'cn' ? list.cn_text : language === 'jp' ? list.jp_text : list.kr_text}</label>\n                        </li>\n\n                    ))}\n                </ul>\n                <div className={\"search\" + current_pack.css}>\n                    <h3>{current_pack.search}</h3>\n                    <span>\n                        <input type=\"text\" value={search} onChange={onChange} onKeyPress={handleKeyPrress} ref={inputRef} />\n                        <button type=\"submit\"><img src={`${process.env.PUBLIC_URL}/img/ic_search.png`} alt=\"\" onClick={findList} /></button>\n                    </span>\n                </div>\n                <p><img src={`${process.env.PUBLIC_URL}/img/img_com.png`} alt=\"\" /></p>\n            </div>\n            {!loading &&\n                <div className={\"right_section\" + current_pack.css}>\n                    <div className={\"content\" + current_pack.css}>\n                        <div className={\"subtop menu01\" + current_pack.css + \" type\"+type}>\n                            <h3>{language === 'en' ? <strong>{leftLists[type].en_text}{current_pack.unit}</strong>\n                                : language === 'cn' ? <strong>{leftLists[type].cn_text}{current_pack.unit}</strong>\n                                    : language === 'jp' ? <strong>{leftLists[type].jp_text}{current_pack.unit}</strong>\n                                        : <strong>{leftLists[type].kr_text}{current_pack.unit}</strong>}\n                            </h3>\n                        </div>\n                        {swiper}\n                        <div className={\"bigimg\" + current_pack.css}>\n                            <ul>\n                                {\n                                    !exist ?\n                                        result.map(res => (\n                                            <li key={res.id}>\n                                                <em>{language === 'en' ? res.title_en : res.title}</em>\n                                                <img className={\"bigimgsize\" + current_pack.css} src={URL + res.photo_2} onError={imgError} onClick={() => firstOpen(res.id)} alt=\"\" />\n                                            </li>\n                                        ))\n                                        :\n                                        find.map(res => (\n                                            <li key={res.id}>\n                                                <em>{language === 'en' ? res.title_en : res.title}</em>\n                                                <img className={\"bigimgsize\" + current_pack.css} src={URL + res.photo_2} onError={imgError} onClick={() => firstOpen(res.id)} alt=\"\" />\n                                            </li>\n                                        ))\n                                }\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            }\n            <Loading open={loading} />\n        </section>\n    )\n}\n\nexport default OnlineExhibitionListContainer;","import { createAction, handleActions } from 'redux-actions';\n\nconst FIRSTOPEN = 'modal/FIRSTOPEN';\nconst SECONDOPEN = 'modal/SECONDOPEN';\nconst MODALCLOSE = 'modal/MODALCLOSE';\n\nexport const firstModalOpen = createAction(FIRSTOPEN);\nexport const secondModalOpen = createAction(SECONDOPEN);\n\nexport const modalClose = createAction(MODALCLOSE);\n\nconst initialState = {\n    first: false,\n    second: false,\n    open: false\n};\n\nconst dialog = handleActions(\n    {\n        [FIRSTOPEN]: (state, action) => {\n            return {\n                ...state, first: true, second: false, open: true\n            }\n        },\n        [SECONDOPEN]: (state, action) => {\n            return {\n                ...state, first: false, second: true, open: true\n            }\n        },\n        [MODALCLOSE]: (state, action) => {\n            return {\n                ...state, first: false, second: false, open: false\n            }\n        }\n    },\n    initialState\n);\n\nexport default dialog;","import { createAction, handleActions } from 'redux-actions';\n\nconst SETID = 'exhibition/SETID';\n\nexport const setID = createAction(SETID, id => id);\n\nconst initialState = {\n    current: -1\n};\n\nconst exhibition = handleActions(\n    {\n        [SETID]: (state, action) => ({\n            current: action.payload\n        })\n    },\n    initialState\n);\n\nexport default exhibition;","import React from 'react';\nimport { useSelector } from 'react-redux';\n\n// import Swiper core and required components\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from 'swiper';\n\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nimport '../static/stylesheets/Swiper.scss';\n// Import Swiper styles\nimport 'swiper/swiper.scss';\nimport 'swiper/components/navigation/navigation.scss';\nimport 'swiper/components/pagination/pagination.scss';\nimport 'swiper/components/scrollbar/scrollbar.scss';\n\n// install Swiper components\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\n\nexport default ({ dataSet, firstOpen }) => {\n    const URL = 'http://14.63.174.102:84';\n\n    const language = useSelector(state => state.language.current);\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\"\n        },\n        en: {\n            css: \" language-en\"\n        },\n        cn: {\n            css: \" language-cn\"\n        },\n        jp: {\n            css: \" language-jp\"\n        }\n    }\n\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    return (\n        <>\n            {dataSet === 'Error' ? (\n                <Swiper>\n                    <SwiperSlide>\n                        <img\n                            className={\"error\" + current_pack.css}\n                            src={`${process.env.PUBLIC_URL}/img/ic_check_on.png`}\n                            alt=\"\"\n                        />\n                    </SwiperSlide>\n                </Swiper>\n            ) : (\n                    <Swiper\n                        slidesPerView={5} // 보이는 슬라이드 수\n                        slidesPerGroup={1} // 슬라이드 할때 몇개를 슬라이드 할것이냐\n                        loop={dataSet.length > 5}\n                        initalslide={0}\n                        loopFillGroupWithBlank\n                        navigation\n                        // watchOverflow\n                        loopPreventsSlide // 활성화되면 전환이 이미 진행 중일 때 스 와이퍼 슬라이드 이전 / 다음 전환을 방지\n                        delay={300}\n                    >\n                        {dataSet.map((data) => (\n                            <SwiperSlide key={data.id}>\n                                <div>\n                                    <em>{language === 'en' ? data.title_en : data.title}</em>\n                                    <img src={URL + data.photo_2} alt=\"no_image\" onClick={() => firstOpen(data.id)} />\n                                </div>\n                            </SwiperSlide>\n                        ))}\n                    </Swiper>\n                )}\n        </>\n    );\n};\n","import React, { useEffect, useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport qs from 'qs';\n\nimport OnlineExhibitionContainer from '../container/OnlineExhibitionContainer';\nimport OnlineExhibitionListContainer from '../container/OnlineExhibitionListContainer';\n\nimport { getDocumentList } from '../api/OnlineExhibitionAPI';\n\nimport { firstModalOpen } from '../store/modal';\nimport { setID } from '../store/exhibition';\nimport { Paths } from '../paths';\nimport SwiperContainer from '../container/SwiperContainer';\nimport { getCookie, setCookie } from '../lib/cookie';\n\nconst OnlineExhibitionPage = ({ match, location }) => {\n    const { index } = match.params;\n    const viewId = parseInt(index);\n\n    const query = qs.parse(location.search, {\n        ignoreQueryPrefix: true,\n    });\n    const type = query.type ? query.type : \"0\";\n    const t = parseInt(type);\n\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const language = useSelector(state => state.language.current);\n\n    const [items, setItems] = useState([]);\n    const [swiper, setSwiper] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\n\n    const firstOpen = useCallback((id) => {\n        window.scrollTo(0, 0);\n        dispatch(setID(id));\n        // const TOKEN = localStorage.getItem('token');\n        const TOKEN = getCookie('token');\n        if (TOKEN) {\n            history.push(LANGUAGE_PATH + Paths.exhibition + '/' + id);\n        } else {\n            // localStorage.setItem('token', true);\n            setCookie('token', true, 1);\n            dispatch(firstModalOpen());\n        }\n    }, [dispatch, history, LANGUAGE_PATH]);\n\n    const callGetDocumentList = useCallback(async () => {\n        setLoading(true);\n        try {\n            const res = await getDocumentList(0); // default : 0\n            res.sort((a, b) => { return (a.title < b.title) ? -1 : (a.title > b.title) ? 1 : 0; });\n\n            const swiperItem = res.filter(item => item.type === 8 || item.type === 9);\n            swiperItem.sort((a, b) => { return a.title < b.title ? -1 : a.title > b.title ? 1 : 0; });\n            setSwiper(<SwiperContainer dataSet={swiperItem} firstOpen={firstOpen} />);\n            setItems(res);\n        } catch (e) {\n            alert('서버에 오류가 발생했습니다.');\n            setSwiper(<SwiperContainer dataSet={\"Error\"} />)\n        }\n        setLoading(false);\n    }, [firstOpen]);\n\n    useEffect(() => {\n        try {\n            callGetDocumentList();\n        } catch (e) {\n            alert('서버에 오류가 발생했습니다.');\n        }\n    }, [callGetDocumentList]);\n\n    return (\n        <>\n            {!isNaN(viewId) ? <OnlineExhibitionContainer viewId={viewId} />\n                : <OnlineExhibitionListContainer type={t} items={items} loading={loading} swiper={swiper} firstOpen={firstOpen} />}\n\n        </>\n    );\n};\n\nexport default OnlineExhibitionPage;\n","export function setCookie(name, value, days) {\n    let expires = '';\n    if (days) {\n        var date = new Date();\n        date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n        expires = '; expires=' + date.toGMTString();\n    } else {\n        expires = '';\n    }\n\n    document.cookie = name + '=' + value + expires + '; path=/';\n}\n\nexport function getCookie(name) {\n    var i,\n        x,\n        y,\n        ARRcookies = document.cookie.split(';');\n\n    for (i = 0; i < ARRcookies.length; i++) {\n        x = ARRcookies[i].substr(0, ARRcookies[i].indexOf('='));\n        y = ARRcookies[i].substr(ARRcookies[i].indexOf('=') + 1);\n\n        x = x.replace(/^\\s+|\\s+$/g, '');\n\n        if (x === name) {\n            return unescape(y);\n        }\n    }\n}\n","import React from 'react'\n\nimport { useSelector } from 'react-redux'\n\nimport { Link } from 'react-router-dom'\n\nimport { Paths } from '../paths/index'\n\nexport default () => {\n\n    const language = useSelector(state => state.language.current);\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\",\n            title: \"컨퍼런스\"\n        },\n        en: {\n            css: \" language-en\",\n            title: \"Conference\"\n        },\n        cn: {\n            css: \" language-cn\",\n            title: \"중국어\"\n        },\n        jp: {\n            css: \" language-jp\",\n            title: \"일본어\"\n        }\n    }\n\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\n    return (\n        <section id=\"main_container\" className={current_pack.css}>\n            <div className={\"tab\" + current_pack.css}>\n                <ul>\n                    <li><Link to={LANGUAGE_PATH + Paths.conference} className={\"on\" + current_pack.css}>{current_pack.title}</Link></li>\n                </ul>\n            </div>\n            <div className={\"main_content\" + current_pack.css}>\n                <div className={\"speech\" + current_pack.css}>\n                    {/* <i></i> */}\n                    {/* <img src={`${process.env.PUBLIC_URL}/img/bg_speech.png`} alt=\"\" /> */}\n                    <iframe\n                        title=\"youtube\"\n                        width=\"100%\"\n                        height=\"551px\"\n                        src=\"http://www.jejusoritv.net/p/index.asp\" //비디오 링크가  cms에 추가하는 것이 없음\n                        alt=\"\"\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                    ></iframe>\n                    {/* <span> {'<'}이름{'('}소속{')>'} </span> */}\n                </div>\n            </div>\n        </section>\n    )\n}","import React from 'react'\nimport Conference from '../container/ConferenceContainer'\n\nexport default () => {\n    return <Conference />\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nimport { Paths } from '../paths/index'\n\nexport default () => {\n\n    const language = useSelector(state => state.language.current);\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\",\n            title: \"개회사\",\n            title2: \"축사\",\n            name: \"제주특별자치도지사 원희룡\",\n            name2: \"농어업농어촌특별위원회 위원장 정현찬\"\n        },\n        en: {\n            css: \" language-en\",\n            title: \"Welcome Address\",\n            title2: \"Congratulatory message\",\n            name: \"제주특별자치도지사 원희룡\",\n            name2: \"농어업농어촌특별위원회 위원장 정현찬\"\n        },\n        cn: {\n            css: \" language-cn\",\n            title: \"중국어\",\n            title2: \"중국어\",\n            name: \"제주특별자치도지사 원희룡\",\n            name2: \"농어업농어촌특별위원회 위원장 정현찬\"\n        },\n        jp: {\n            css: \" language-jp\",\n            title: \"일본어\",\n            title2: \"일본어\",\n            name: \"제주특별자치도지사 원희룡\",\n            name2: \"농어업농어촌특별위원회 위원장 정현찬\"\n        }\n    }\n\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\n\n    return (\n        <section id=\"main_container\" className={current_pack.css}>\n            <div className={\"tab\" + current_pack.css}>\n                <ul>\n                    <li><Link to={LANGUAGE_PATH + Paths.session} className={\"on\" + current_pack.css}>{current_pack.title}</Link></li>\n                    <li><Link to={LANGUAGE_PATH + Paths.session + '/congraturation'}>{current_pack.title2}</Link></li>\n                </ul>\n            </div>\n            <div className={\"main_content\" + current_pack.css}>\n                <div className={\"speech\" + current_pack.css}>\n                    {/* <i></i>\n                    <img src={`${process.env.PUBLIC_URL}/img/bg_welcoming.png`} alt=\"\" /> */}\n                    <iframe\n                        title=\"youtube\"\n                        width=\"100%\"\n                        height=\"100%\"\n                        src=\"https://www.youtube.com/embed/F_3m0ucTsZ0\" //비디오 링크가  cms에 추가하는 것이 없음\n                        alt=\"\"\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                    ></iframe>\n                    <span> {current_pack.name} </span>\n                </div>\n                <div className={\"speech\" + current_pack.css}>\n                    {/* <i></i>\n                    <img src={`${process.env.PUBLIC_URL}/img/bg_speech.png`} alt=\"\" /> */}\n                    <iframe\n                        title=\"youtube\"\n                        width=\"100%\"\n                        height=\"100%\"\n                        src=\"https://www.youtube.com/embed/35nf0HYGMQw\" //비디오 링크가  cms에 추가하는 것이 없음\n                        alt=\"\"\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                    ></iframe>\n                    <span> {current_pack.name2} </span>\n                </div>\n            </div>\n        </section>\n    )\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\n\nimport { Paths } from '../paths/index'\n\nexport default () => {\n\n    const language = useSelector(state => state.language.current);\n\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\",\n            title: \"개회사\",\n            title2: \"축사\",\n            name: \"제주특별자치도의회 좌남수 의원\",\n            name2: \"더불어민주당 위성곤 의원\"\n        },\n        en: {\n            css: \" language-en\",\n            title: \"Welcome Address\",\n            title2: \"Congratulatory message\",\n            name: \"제주특별자치도의회 좌남수 의원\",\n            name2: \"더불어민주당 위성곤 의원\"\n        },\n        cn: {\n            css: \" language-cn\",\n            title: \"중국어\",\n            title2: \"중국어\",\n            name: \"중국어\",\n            name2: \"중국어\"\n        },\n        jp: {\n            css: \" language-jp\",\n            title: \"일본어\",\n            title2: \"일본어\",\n            name: \"일본어\",\n            name2: \"일본어\"\n        }\n    }\n\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\n    return (\n        <section id=\"main_container\" className={current_pack.css}>\n            <div className={\"tab\" + current_pack.css}>\n                <ul>\n                    <li><Link to={LANGUAGE_PATH + Paths.session}>{current_pack.title}</Link></li>\n                    <li><Link to={LANGUAGE_PATH + Paths.session + '/congraturation'} className={\"on\" + current_pack.css}>{current_pack.title2}</Link></li>\n                </ul>\n            </div>\n            <div className={\"main_content\" + current_pack.css}>\n                <div className={\"speech\" + current_pack.css}>\n                    {/* <i></i>\n                    <img src={`${process.env.PUBLIC_URL}/img/bg_speech.png`} alt=\"\" /> */}\n                    <iframe\n                        title=\"youtube\"\n                        width=\"100%\"\n                        height=\"100%\"\n                        src=\"https://www.youtube.com/embed/D6B7JTYF3fQ\" //비디오 링크가  cms에 추가하는 것이 없음\n                        alt=\"\"\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                    ></iframe>\n                    <span> {current_pack.name} </span>\n                </div>\n\n                <div className={\"speech\" + current_pack.css}>\n                    {/* <i></i>\n                    <img src={`${process.env.PUBLIC_URL}/img/bg_speech.png`} alt=\"\" /> */}\n                    <iframe\n                        title=\"youtube\"\n                        width=\"100%\"\n                        height=\"100%\"\n                        src=\"https://www.youtube.com/embed/ygVM4k7lZck\" //비디오 링크가  cms에 추가하는 것이 없음\n                        alt=\"\"\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                    ></iframe>\n                    <span> {current_pack.name2} </span>\n                </div>\n            </div>\n        </section>\n    )\n}","import React from 'react'\n\nimport WelcomingContainer from '../container/WelcomingContainer'\nimport CongraturationContainer from '../container/CongraturationContainer'\n\nexport default ({ match }) => {\n    const { mode } = match.params;\n\n    return (\n        <>\n            {mode === 'congraturation' ? <CongraturationContainer />\n            : <WelcomingContainer />}\n        </>\n    )\n}","import Axios from \"axios\";\n\nimport { Paths } from '../paths/index'\n\nconst URL = Paths.api\n\nexport const getDocumentList = async () => {\n    const query = `${URL}/document?module_id=2`\n    const res = await Axios.get(query)\n    return res.data\n}\n\nexport const getShowDocument = async (id) => {\n    const query = `${URL}/document/${id}?moduel_id=2`\n    const res = await Axios.get(query)\n    return res.data\n}","\nexport function stringNumberToInt(strNumber) {\n    // 구분자가 들어간 수치 데이터를 숫자로 변경\n    if (strNumber !== undefined && strNumber !== null) {\n        return strNumber !== '' ? parseInt(strNumber.replace(/,/g, '')) : 0;\n    }\n    return 0;\n}\nexport function numberFormat(x) {\n    // 수치 데이터에 구분자(,)를 넣음\n    if (x !== undefined && x !== null) {\n        return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    } else {\n        return '0';\n    }\n}\nexport function numberToKorean(number) {\n    // 수치 데이터를 한글 표현으로 변경\n    const inputNumber = number < 0 ? false : number;\n    const unitWords = ['', '만', '억', '조', '경'];\n    const splitUnit = 10000;\n    const splitCount = unitWords.length;\n    let resultArray = [];\n    let resultString = '';\n    for (let i = 0; i < splitCount; i++) {\n        let unitResult =\n            (inputNumber % Math.pow(splitUnit, i + 1)) / Math.pow(splitUnit, i);\n        unitResult = Math.floor(unitResult);\n        if (unitResult > 0) {\n            resultArray[i] = unitResult;\n        }\n    }\n    for (let i = 0; i < resultArray.length; i++) {\n        if (!resultArray[i]) continue;\n        resultString = String(numberFormat(resultArray[i])) + unitWords[i] + resultString;\n    }\n    return resultString;\n}\n\nconst MS = 1000;\nconst DIF_MINUTES = 60 * MS;\nconst DIF_HOURS = 60 * DIF_MINUTES;\nconst DIF_DAYS = 24 * DIF_HOURS;\n\nconst crossBrowsingDate = date => {\n    if (date) {\n        let setDate = null;\n        if (typeof date === 'string') {\n            // IE 에서 YYYY-MM-DD HH:MM:SS 를 생성자로 사용할 수 없기 때문에 예외 처리.\n            setDate = date.replace(/-/g, '/');\n            // YYYY/MM/DD HH:MM:SS로 변경해줌\n        } else setDate = date;\n        return new Date(setDate);\n    }\n    return new Date(0);\n}\nconst dateFormatting = (date) => (date < 10 ? '0' + date : date); // 달력의 수치를 두 자리로 변환해주는 함수\nexport const dateToYYYYMMDD = (date, join = '-') => {\n    // Javascript Date 객체를 형식에 맞게 변환하여 표현함.\n    const absolute = crossBrowsingDate(date); // 만약에 Date 객체가 넘어오지 않을 것을 대비\n    const monthFormatting = dateFormatting(absolute.getMonth() + 1); // 월을 두 자리로 변환\n    const dayFormatting = dateFormatting(absolute.getDate()); // 일을 두 자리로 변환\n    return (\n        absolute.getFullYear() + join + monthFormatting + join + dayFormatting\n    );\n};\nexport const dateToYYYYMMDDHHMMSS = (date, join = '-') => {\n    const absolute = crossBrowsingDate(date);\n    return (\n        dateToYYYYMMDD(absolute, join) +\n        ` ${dateFormatting(absolute.getHours())}:${dateFormatting(\n            absolute.getMinutes(),\n        )}:${dateFormatting(absolute.getSeconds())}`\n    );\n};\n\nexport const dateToRelative = (date, join = '-') => {\n    // Javascript Date 객체를 현재 시간과 비교하여 표현함.\n    const current = Date.now(),\n        relative = crossBrowsingDate(date);\n    const elapsed = current - relative.getTime();\n\n    if (elapsed >= DIF_DAYS) {\n        return dateToYYYYMMDD(relative, join);\n    } else if (elapsed >= DIF_HOURS) {\n        return `${Math.floor(elapsed / DIF_HOURS)}시간 전`;\n    } else if (elapsed >= DIF_MINUTES) {\n        return `${Math.floor(elapsed / DIF_MINUTES)}분 전`;\n    } else if (elapsed >= 0) {\n        return `${Math.floor(elapsed / MS)}초 전`;\n    } else if (elapsed >= -DIF_MINUTES) {\n        return `${-Math.ceil(elapsed / MS)}초 후`;\n    } else if (elapsed >= -DIF_HOURS) {\n        return `${-Math.ceil(elapsed / DIF_MINUTES)}분 후`;\n    } else if (elapsed >= -DIF_DAYS) {\n        return `${-Math.ceil(elapsed / DIF_HOURS)}시간 후`;\n    } else {\n        return dateToYYYYMMDD(relative, join);\n    }\n};\n\nconst Days = ['일', '월', '화', '수', '목', '금', '토'];\n\nexport const dateToMMDD = (date, join = '-') =>\n    `${dateFormatting(date.getMonth() + 1)}${join}${dateFormatting(\n        date.getDate(),\n    )}`;\nexport const dateToHHMM = (date, join = ':') =>\n    `${dateFormatting(date.getHours())}${join}${dateFormatting(\n        date.getMinutes(),\n    )}`;\nexport const dateToDay = (date) => Days[date];\n\nexport const secondsToMMSS = (second) => {\n    const minute = Math.floor(second / 60);\n    const remainSecond = second % 60;\n\n    return `${minute}:${\n        remainSecond >= 10 ? remainSecond : `0${remainSecond}`\n    }`;\n};\n\nexport const stringToTel = str => str ? str.replace(/(^02.{0}|^01.{1}|[0-9]{3})([0-9]+)([0-9]{4})/, '$1-$2-$3')\n    : '';\n// string을 전화번호 표현(구분자 '-' 추가)으로 변경\nexport const telToString = tel => tel ? tel.replace('-', '') : '';\n// 전화번호 표현을 string으로 변경\n\n\nexport const hideEmail = (email) => {\n    const s = email.indexOf('@');\n    return email.substr(0, s - 2) + '**';\n};\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { dateToYYYYMMDD } from '../lib/formatter';\nimport { Paths } from '../paths';\n\nconst PAGE_PER_VIEW = 10; // 한 페이지에 10개 보여주겠다.\n\nexport default ({ noticeList, currentPage }) => {\n\n    const language = useSelector(state => state.language.current);\n    // const currentList = noticeList.slice(currentPage.page * 10 - 10, currentPage.page * 10 - 1)\n    // 이것도 수식을 이렇게 하면 중복 숫자 10 제거..\n    const currentList = noticeList.slice((currentPage - 1) * PAGE_PER_VIEW, currentPage * PAGE_PER_VIEW);\n    \n    \n    const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\",\n            go: \"바로가기\"\n        },\n        en: {\n            css: \" language-en\",\n            go: \"Link\"\n        },\n        cn: {\n            css: \" language-cn\",\n            go: \"중국어\"\n        },\n        jp: {\n            css: \" language-jp\",\n            go: \"일본어\"\n        }\n    }\n\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    return (\n        <>\n            {currentList.map(item =>\n                <tr key={item.id}>\n                    <td>{dateToYYYYMMDD(item.created_at)}</td>\n                    <td><Link to={LANGUAGE_PATH + Paths.notice + '/' + item.id} >{item.title}</Link></td>\n                    <td><Link to={LANGUAGE_PATH + Paths.notice + '/' + item.id} className={\"go\" + current_pack.css} >{current_pack.go}</Link></td>\n                </tr>\n            )}\n        </>\n    );\n};","import React, { useCallback } from 'react'\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom'\nimport { Paths } from '../paths';\n\nexport default ({ noticeList, currentPage }) => {\n\n    const language = useSelector(state => state.language.current);\n    const history = useHistory();\n    const listLength = noticeList.length\n    const paging = []\n\n    const paginationButton = (listLength) => {\n        let leng = undefined\n        if (listLength % 10 === 0) leng = Math.floor(listLength / 10)\n        else leng = Math.floor(listLength / 10 + 1)\n\n        for (let i = 0; i < leng; i++) {\n            paging.push(i + 1)\n        }\n    }\n\n    const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\n\n    const pageLink = useCallback(page => {\n        if (page <= 0) history.push(LANGUAGE_PATH + Paths.notice + '?page=1')\n        else if (page > paging.length) history.push(LANGUAGE_PATH + Paths.notice + '?page=' + paging.length)\n        else history.push(LANGUAGE_PATH + Paths.notice + '?page=' + page)\n    }, [paging, history, LANGUAGE_PATH]);\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\"\n        },\n        en: {\n            css: \" language-en\"\n        },\n        cn: {\n            css: \" language-cn\"\n        },\n        jp: {\n            css: \" language-jp\"\n        }\n    }\n\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    return (\n        <>\n            <li><div onClick={() => pageLink(1)} ><img src={`${process.env.PUBLIC_URL}/img/ic_first.png`} alt=\"\" /></div></li>\n            <li><div onClick={() => pageLink(parseInt(currentPage) - 1)} ><img src={`${process.env.PUBLIC_URL}/img/ic_prev.png`} alt=\"\" /></div></li>\n\n            {paginationButton(listLength)}\n            {\n                paging.map(item =>\n                    <li key={item} className={item + current_pack.css}><div onClick={() => pageLink(item)} className={item === currentPage ? \"on\" : \"\" + current_pack.css} >{item}</div></li>\n                )\n            }\n\n            <li><div onClick={() => pageLink(parseInt(currentPage) + 1)} ><img src={`${process.env.PUBLIC_URL}/img/ic_next.png`} alt=\"\" /></div></li>\n            <li><div onClick={() => pageLink(paging.length)} ><img src={`${process.env.PUBLIC_URL}/img/ic_end.png`} alt=\"\" /></div></li>\n\n        </>\n    )\n}","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nimport { Paths } from '../paths/index'\n\n\nimport Pagination from './Pagination'\nimport PaginationButton from './PaginationButton'\n\nexport default ({ page, noticeList }) => {\n    const language = useSelector(state => state.language.current);\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\",\n            title: \"공지사항\",\n            amount: \"총\",\n            amount2: \"건의 글이 있습니다.\",\n            date: \"작성일자\",\n            subject: \"제목\",\n            go: \"보기\"\n        },\n        en: {\n            css: \" language-en\",\n            title: \"Notice\",\n            amount: \"There are a total\",\n            amount2: \"articles\",\n            date: \"Date\",\n            subject: \"Contents\",\n            go: \"View\"\n        },\n        cn: {\n            css: \" language-cn\",\n            title: \"중국어\",\n            amount: \"중국어\",\n            amount2: \"중국어\",\n            date: \"중국어\",\n            subject: \"중국어\",\n            go: \"중국어\"\n        },\n        jp: {\n            css: \" language-jp\",\n            title: \"일본어\",\n            amount: \"일본어\",\n            amount2: \"일본어\",\n            date: \"일본어\",\n            subject: \"일본어\",\n            go: \"일본어\"\n        }\n    }\n\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n \n    const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\n\n    return (\n        <section id=\"comm_container\" className={current_pack.css}>\n            <div className={\"tab\" + current_pack.css}>\n                <ul>\n                    <li><Link to={LANGUAGE_PATH + Paths.notice} className={\"on\" + current_pack.css}>{current_pack.title}</Link></li>\n                </ul>\n            </div>\n            <div className={\"noticebox\" + current_pack.css}>\n                <span>{current_pack.amount} <strong>{noticeList.length}</strong> {current_pack.amount2}</span>\n                <table>\n                    <caption>공지사항 내용을 보여주는 표</caption>\n                    <colgroup>\n                        <col style={{ width: \"15%\" }} />\n                        <col />\n                        <col style={{ width: \"15%\" }} />\n                    </colgroup>\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">{current_pack.date}</th>\n                            <th scope=\"col\">{current_pack.subject}</th>\n                            <th scope=\"col\">{current_pack.go}</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <Pagination noticeList={noticeList} currentPage={page} />\n                    </tbody>\n                </table>\n                <div className={\"tnavi\" + current_pack.css}>\n                    <ul>\n                        <PaginationButton noticeList={noticeList} currentPage={page} />\n                    </ul>\n                </div>\n            </div>\n        </section>\n    )\n}","import React, { useCallback, useEffect, useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Paths } from '../paths'\n\nimport { getShowDocument } from '../api/NoticeAPI'\nimport Loading from '../components/assets/Loading'\nimport { dateToYYYYMMDD } from '../lib/formatter'\nimport { useSelector } from 'react-redux'\n\nexport default ({ viewId, near }) => {\n    const history = useHistory();\n    const [loading, setLoading] = useState(false);\n    const [noticeView, setNoticeView] = useState({})\n\n    const language = useSelector(state => state.language.current);\n\n    const callNoticeView = useCallback(async () => {\n        setLoading(true);\n        // api 요청할 때는 로딩 중이 필요하다\n        try {\n            const res = await getShowDocument(viewId);\n            if (res) {\n                setNoticeView(res);\n            }\n        } catch (e) {\n            // 예외처리 해주고\n            alert('삭제되거나 없는 게시물입니다.');\n            history.goBack();\n        }\n        setLoading(false);\n    }, [viewId, history]);\n\n    useEffect(() => {\n        try {\n            callNoticeView();\n        } catch (e) {\n            alert('서버에 오류가 발생했습니다.');\n        }\n        return () => setLoading(false); // cleanup function을 이용\n    }, [callNoticeView])\n\n    const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\",\n            title: \"공지사항\",\n            list: \"목 록\",\n            prev: \"이전글\",\n            next: \"다음글\"\n        },\n        en: {\n            css: \" language-en\",\n            title: \"Notice\",\n            list: \"List\",\n            prev: \"Prev\",\n            next: \"Next\"\n        },\n        cn: {\n            css: \" language-cn\",\n            title: \"중국어\",\n            list: \"중국어\",\n            prev: \"중국어\",\n            next: \"중국어\"\n        },\n        jp: {\n            css: \" language-jp\",\n            title: \"일본어\",\n            list: \"일본어\",\n            prev: \"일본어\",\n            next: \"일본어\"\n        }\n    }\n\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    const URL = \"http://14.63.174.102:84\"\n    return (\n        <section id=\"comm_container\" className={current_pack.css}>\n            <div className={\"tab\" + current_pack.css}>\n                <ul>\n                    <li>\n                        <Link to={LANGUAGE_PATH + Paths.notice} className={\"on\" + current_pack.css}>\n                            {current_pack.title}\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n            {!loading && (\n                <div className={\"noticeview\" + current_pack.css}>\n                    <div className={\"viewhead\" + current_pack.css}>\n                        <h3>{noticeView.title}</h3>\n                        <ul>\n                            <li>{current_pack.title}</li>\n                            <li>{dateToYYYYMMDD(noticeView.created_at)}</li>\n                            {/* <li>조회수 637</li> */}\n                        </ul>\n                    </div>\n                    <div className={\"viewcontent\" + current_pack.css}>\n                        {noticeView.contents}\n                        <div className={\"file\" + current_pack.css}>\n                            {noticeView.file_1 && <a href={URL + noticeView.file_1} rel=\"noopener noreferrer\" target=\"_blank\" download>\n                                <img\n                                    src={`${process.env.PUBLIC_URL}/img/ic_download.png`}\n                                    alt=\"download\"\n                                />\n                            </a>}\n                            <span>\n                                {noticeView.file_1 && <a href={URL + noticeView.file_1} rel=\"noopener noreferrer\" target=\"_blank\" download>{noticeView.file_1}</a>}\n                                {/* <em>334kb</em> */}\n                            </span>\n                        </div>\n                    </div>\n                    <div className={\"btbox\" + current_pack.css}>\n                        <Link to={LANGUAGE_PATH + Paths.notice} className={\"bk\" + current_pack.css}>\n                            {current_pack.list}\n                        </Link>\n                        {near.next && <Link to={LANGUAGE_PATH + Paths.notice + '/' + near.next} className={\"wr\" + current_pack.css}>\n                            {current_pack.next}\n                        </Link>}\n                        {near.prev && <Link to={LANGUAGE_PATH + Paths.notice + '/' + near.prev} className={\"wr\" + current_pack.css}>\n                            {current_pack.prev}\n                        </Link>}\n                    </div>\n                </div>\n            )}\n            <Loading open={loading} />\n        </section>\n    );\n}","import React, { useCallback, useEffect, useState } from 'react'\nimport { getDocumentList } from '../api/NoticeAPI'\nimport qs from 'qs';\n\nimport NoticeListContainer from '../container/NoticeListContainer'\nimport NoticeViewContainer from '../container/NoticeViewContainer'\nimport Loading from '../components/assets/Loading';\n\nexport default ({ match, location, history }) => {\n    const { index } = match.params; // 이걸 view인지 검출하지말고\n    const viewId = parseInt(index);\n    // const [viewId, setViewId] = useState(0);\n    // 이것도 필요가 없지 REST_API 쓸거니까\n\n    const query = qs.parse(location.search, {\n        ignoreQueryPrefix: true,\n    });\n    const page = query.page ? query.page : \"1\";\n    const p = parseInt(page);\n    // 현재 페이지 가져오는거(?page= 이 없으면 1페이지)\n\n    const [loading, setLoading] = useState(false);\n    const [noticeList, setNoticeList] = useState([]);\n\n    const callNoticeList = useCallback(async () => {\n        setLoading(true);\n        try {\n            const res = await getDocumentList();\n            if (res) {\n                setNoticeList(res);\n            }\n        } catch (e) {\n            alert('목록을 가져오는데 실패했습니다.');\n        }\n        setLoading(false);\n    }, []);\n\n    useEffect(() => {\n        callNoticeList();\n    }, [callNoticeList]);\n\n    const getNearFromList = useCallback(id => {\n        const idx = noticeList.findIndex(item => item.id === id)\n        if (idx !== -1) {\n            const prev = idx !== noticeList.length - 1 ? noticeList[idx + 1].id : null;\n            const next = idx !== 0 ? noticeList[idx - 1].id : null;\n            return { prev, next };\n        } else {\n            return { prev: null, next: null}; // 에러\n        }\n    } , [noticeList]);\n\n    return (\n        <>\n            {!loading && <>\n                {!isNaN(viewId) ? <NoticeViewContainer viewId={viewId} near={getNearFromList(viewId)} />\n                : <NoticeListContainer page={p} noticeList={noticeList} />}\n            </>}\n            <Loading open={loading} />\n        </>\n    )\n}","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom'\n\nimport { Paths } from '../paths/index'\n\nexport default () => {\n    const language = useSelector(state => state.language.current);\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\",\n            title: \"SNS\",\n            youtube: \"유튜브 바로가기\",\n            facebook: \"페이스북 바로가기\",\n            instagram: \"인스타그램 바로가기\"\n        },\n        en: {\n            css: \" language-en\",\n            title: \"SNS\",\n            youtube: \"You Tube Link\",\n            facebook: \"Facebook Link\",\n            instagram: \"Instagram Link\"\n        },\n        cn: {\n            css: \" language-cn\",\n            title: \"중국어\",\n            youtube: \"중국어\",\n            facebook: \"중국어\",\n            instagram: \"중국어\"\n        },\n        jp: {\n            css: \" language-jp\",\n            title: \"일본어\",\n            youtube: \"일본어\",\n            facebook: \"일본어\",\n            instagram: \"일본어\"\n        }\n    }\n\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\n    return (\n        <section id=\"main_container\" className={current_pack.css}>\n            <div className={\"tab\" + current_pack.css}>\n                <ul>\n                    <li><Link to={LANGUAGE_PATH + Paths.sns} className={\"on\" + current_pack.css}>{current_pack.title}</Link></li>\n                </ul>\n            </div>\n            <div className={\"snsbox\" + current_pack.css}>\n                <ul>\n                    <li><a rel=\"noopener noreferrer\" href=\"https://www.youtube.com/channel/UCrVe4zDkzenuAjrH-6ukEjw\" target=\"_blank\"><i><img src={`${process.env.PUBLIC_URL}/img/img_youtube.png`} alt=\"youtube\" /></i>{current_pack.youtube}</a></li>\n                    <li><a rel=\"noopener noreferrer\" href=\"https://www.facebook.com/6%EC%B0%A8%EC%82%B0%EC%97%85%EC%A0%9C%EC%A3%BC%EA%B5%AD%EC%A0%9C%EB%B0%95%EB%9E%8C%ED%9A%8C-112819440075222\" target=\"_blank\"><i><img src={`${process.env.PUBLIC_URL}/img/img_facebook.png`} alt=\"facebook\" /></i>{current_pack.facebook}</a></li>\n                    <li><a rel=\"noopener noreferrer\" href=\"https://www.instagram.com/farmingplus_jeju/\" target=\"_blank\"><i><img src={`${process.env.PUBLIC_URL}/img/img_instagram.png`} alt=\"instagram\" /></i>{current_pack.instagram}</a></li>\n                </ul>\n            </div>\n        </section>\n    );\n};","import React from 'react'\nimport SNSContainer from '../container/SNSContainer'\n\nexport default () => {\n    return <SNSContainer />\n}","import { createAction, handleActions } from 'redux-actions';\n\nconst OPEN = 'dialog/OPEN';\nconst CLOSE = 'dialog/CLOSE';\n\nexport const dialogOpen = createAction(OPEN, (confirm, title, text, handleClick) => ({\n    confirm, title, text, handleClick\n}));\n\nexport const dialogClose = createAction(CLOSE, form => form);\n\nconst initialState = {\n    open: false,\n    confirm: false,\n    title: \"\",\n    text: \"\",\n    handleClick: () => {}\n};\n\nconst dialog = handleActions(\n    {\n        [OPEN]: (state, action) => {\n            const { confirm, title, text, handleClick } = action.payload;\n            return {\n                ...state,\n                open: true, confirm, title, text, handleClick\n            }\n        },\n        [CLOSE]: (state, action) => ({\n            ...state, open: false\n        })\n    },\n    initialState\n);\n\nexport default dialog;","import React, { useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n/* Library */\n\nimport { useDispatch } from 'react-redux';\nimport { dialogClose } from '../../store/dialog';\n/* Redux */\n\nimport { Backdrop, ButtonBase } from '@material-ui/core';\n/* Components */\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n    },\n}));\n\nexport default ({ confirm, title, text, handleClick = () => {}, open }) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const onClose = useCallback(() => dispatch(dialogClose()), [dispatch]);\n    const onClick = useCallback(() => {\n        handleClick();\n        onClose();\n    }, [handleClick, onClose]);\n\n    return (\n        <>\n            <div>\n                <div>\n                    <div>\n                        <h3>{title}</h3>\n                        <p>{text}</p>\n                    </div>\n                    <div>\n                        {confirm && (\n                            <ButtonBase onClick={onClose}>아니오</ButtonBase>\n                        )}\n                        <ButtonBase onClick={onClick}>\n                            {/* {confirm ? '예' : '확인'} */}\n                        </ButtonBase>\n                    </div>\n                </div>\n            </div>\n            <Backdrop\n                className={classes.backdrop}\n                open={open}\n                onClick={onClose}\n            />\n        </>\n    );\n};\n","import React from 'react';\n/* Library */\n\nimport { useSelector } from 'react-redux';\n/* Redux */\n\nimport Dialog from '../../components/assets/Dialog';\n/* Components */\n\nexport default () => {\n    const state = useSelector(state => state.dialog);\n    const { title, text, handleClick, open, confirm } = state;\n    return <Dialog confirm={confirm} title={title} text={text} handleClick={handleClick} open={open} />;\n};\n","import React from 'react';\n/* Library */\n\nimport { useSelector } from 'react-redux';\n/* Redux */\n\nimport Loading from '../../components/assets/Loading';\n/* Components */\n\nexport default () => {\n    const state = useSelector(state => state.loading);\n    return <Loading open={Object.values(state).reduce((prev, cur) => prev || cur, false)} />\n};\n","import Axios from 'axios'\n\nimport { Paths } from '../paths/index'\n\nconst URL = Paths.api\n\nexport const postUserEvent = async ({ name, position, email, phone }) => {\n    const query = `${URL}/user/add_attend_user`\n\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('position', position);\n    formData.append('email', email);\n    formData.append('phone', phone);\n\n    const res = await Axios.post(query, formData);\n\n    return res.data;\n}","export const isEmailForm = (asValue) => {\n    const regExp = /^[0-9a-zA-Z]([-_\\\\.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_\\\\.]?[0-9a-zA-Z])*\\.[a-zA-Z]{2,3}$/i;\n    return regExp.test(asValue); // 형식에 맞는 경우 true 리턴\n};\n\nexport const isCellPhoneForm = (asValue) => {\n    const regExp =  /^01(?:0|1|[6-9])(?:\\d{3}|\\d{4})\\d{4}$/;\n    const hyphenRegExp = /^01(?:0|1|[6-9])-(?:\\d{3}|\\d{4})-\\d{4}$/\n    return regExp.test(asValue) || hyphenRegExp.test(asValue); // 형식에 맞는 경우 true 리턴\n};\n\nexport const isPasswordForm = (asValue) => {\n    const regExp = /^(?=.*\\d)(?=.*[a-zA-Z])[0-9a-zA-Z]{8,10}$/; //  8 ~ 10자 영문, 숫자 조합\n    return regExp.test(asValue); // 형식에 맞는 경우 true 리턴\n};\n\nexport const onlyNumber = value => /[0-9,-]/.test(value) || value.length > 1;\nexport const onlyNumberListener = e => !onlyNumber(e.key) && e.preventDefault();\n\nexport const isEmpty = param => Object.keys(param).length === 0;\n\nexport const isMobile = () => {\n    const UserAgent = navigator.userAgent;\n    return UserAgent.match(/iPhone|iPod|iPad|Android|Windows CE|BlackBerry|Symbian|Windows Phone|webOS|Opera Mini|Opera Mobi|POLARIS|IEMobile|lgtelecom|nokia|SonyEricsson/i) != null\n    || UserAgent.match(/LG|SAMSUNG|Samsung/) != null;\n}\n","import React, { useCallback, useReducer, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { secondModalOpen, modalClose } from '../store/modal';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Backdrop } from '@material-ui/core';\nimport { postUserEvent } from '../api/UserAPI';\nimport { useHistory } from 'react-router-dom';\nimport { Paths } from '../paths';\nimport { isCellPhoneForm, isEmailForm, onlyNumberListener } from '../lib/formatChecker';\n/* Redux */\n\nfunction reducer(state, action) {\n    return {\n        ...state,\n        [action.name]: action.value.trim(),\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop: {\n        css: \"\",\n        zIndex: 90,\n    },\n}));\n\nconst OnlineExhibitionEventContainer = () => {\n\n    const language = useSelector(state => state.language.current);\n    const viewId = useSelector(state => state.exhibition.current);\n    const classes = useStyles();\n    const history = useHistory();\n    const dispatch = useDispatch();\n\n    const secondOpen = useCallback(() => dispatch(secondModalOpen()), [dispatch]);\n    const close = useCallback(() => dispatch(modalClose()), [dispatch]);\n\n    const states = useSelector(state => state.modal);\n    const { first, second, open } = states;\n\n    const [state, action] = useReducer(reducer, {\n        name: '',\n        position: '', // 소속\n        title: '', // 직함\n        phone: '', // 휴대폰 번호\n        tel: '', // 전화번호\n        email: ''\n    });\n    const { name, position, title, phone, tel, email } = state;\n    const onChange = (e) => action(e.target);\n\n    const [agree, setAgree] = useState(false);\n\n    const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\n\n    const inputCheck = useCallback(async (e) => {\n\n        e.preventDefault();\n\n        const phoneData = isCellPhoneForm(phone, false);\n        const emailData = isEmailForm(email);\n\n        if (name === '' || position === '' || title === '' || phone === '' || tel === '' || email === '' || !agree)\n            alert(\"필수항목들을 입력해주세요\");\n        else if (!phoneData && !emailData)  // 둘다 틀림\n            alert(\"휴대폰 번호와 이메일 주소를 확인해 주세요.\");\n        else if (!phoneData && emailData)\n            alert(\"휴대폰 번호를 확인해 주세요.\");\n        else if (phoneData && !emailData)\n            alert(\"이메일 주소를 확인해 주세요.\");\n        else {\n            try {\n                await postUserEvent({\n                    name: name,\n                    position: position,\n                    email: email,\n                    phone: phone\n                });\n            } catch (e) {\n                alert('서버에 오류가 발생했습니다.');\n            }\n            dispatch(modalClose());\n            history.push(LANGUAGE_PATH + Paths.exhibition + '/' + viewId);\n        }\n\n    }, [name, position, email, phone, dispatch, history, viewId, agree, tel, title, LANGUAGE_PATH]);\n\n    const nextTime = useCallback(() => {\n        dispatch(modalClose());\n        history.push(LANGUAGE_PATH + Paths.exhibition + '/' + viewId);\n    }, [dispatch, history, viewId, LANGUAGE_PATH]);\n\n    const closeModal = useCallback(() => {\n        dispatch(modalClose());\n        history.goBack()\n    }, [dispatch, history]);\n\n    //--------------------------------------------------------------------------------------\n    const LANGUAGE_PACK = {\n        kr: {\n            css: \"\",\n            subject: \"이벤트 참여를 위한 회원정보 입력\",\n            subject2: \"\",\n            necessary: \"*는 필수 항목입니다.\",\n            name: \"이름\",\n            placeholder: \"영문, 숫자, _ 만 입력 가능, 최소 3자 이상\",\n            belong: \"소속\",\n            title: \"직함\",\n            mobile: \"휴대폰 번호\",\n            phone: \"전화번호\",\n            email: \"이메일 주소\",\n            privacy: \"개인정보취급방침\",\n            agree: \"동의합니다\",\n            submit: \"응모하기\"\n        },\n        en: {\n            css: \" language-en\",\n            subject: \"Entering member information\",\n            subject2: \"to participate in the event\",\n            necessary: \"*\",\n            name: \"Name\",\n            placeholder: \"Only English, numbers, and_can be entered, at least 3 characters\",\n            belong: \"Organization\",\n            title: \"Title\",\n            mobile: \"Mobile\",\n            phone: \"Phone\",\n            email: \"e-mail\",\n            privacy: \"Privacy policy\",\n            agree: \"I agree\",\n            submit: \"Submit\"\n        },\n        cn: {\n            css: \" language-cn\",\n            subject: \"중국어\",\n            subject2: \"중국어\",\n            necessary: \"중국어\",\n            name: \"중국어\",\n            placeholder: \"중국어\",\n            belong: \"중국어\",\n            title: \"중국어\",\n            mobile: \"중국어\",\n            phone: \"중국어\",\n            email: \"중국어\",\n            privacy: \"중국어\",\n            agree: \"중국어\",\n            submit: \"중국어\"\n        },\n        jp: {\n            css: \" language-jp\",\n            mention: \"일본어\",\n            mention2: \"일본어\",\n            mention3: \"일본어\",\n            join: \"일본어\",\n            cancel: \"일본어\",\n            subject: \"일본어\",\n            subject2: \"일본어\",\n            necessary: \"일본어\",\n            name: \"일본어\",\n            placeholder: \"일본어\",\n            belong: \"일본어\",\n            title: \"일본어\",\n            mobile: \"일본어\",\n            phone: \"일본어\",\n            email: \"일본어\",\n            privacy: \"일본어\",\n            agree: \"일본어\",\n            submit: \"일본어\"\n        }\n    }\n\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\n    //--------------------------------------------------------------------------------------\n\n    return (\n        <>\n            <div className={\"modal\" + current_pack.css}>\n                {/* event1 */}\n                {first &&\n                    <div className={\"eventin\" + current_pack.css}>\n                        <h3><strong>이벤트 참여 후</strong>전시관 둘러보기</h3>\n                        <span>행사 종료 후 추첨을 통하여 경품을 지급해 드립니다.</span>\n                        <p><img src={`${process.env.PUBLIC_URL}/img/img_eventin.png`} alt=\"\" /></p>\n                        <Link to=\"#\" className={\"btin\" + current_pack.css} onClick={secondOpen}>참여하기</Link>\n                        <Link to=\"#\" className={\"btclose\" + current_pack.css} onClick={nextTime}>다음에</Link>\n                    </div>\n                }\n                {/* event2 */}\n                {second &&\n                    <div className={\"eventtxt\" + current_pack.css}>\n                        <img src={`${process.env.PUBLIC_URL}/icon/close.svg`} alt=\"\" style={{ position: \"absolute\", top: \"20px\", right: \"30px\" }} onClick={closeModal} />\n                        {language === \"en\" ? <><h3>{current_pack.subject}</h3><p /><div>{current_pack.subject2}</div></>\n                            : language === \"cn\" ? <><h3>{current_pack.subject}</h3><p /><div>{current_pack.subject2}</div></>\n                                : language === \"jp\" ? <><h3>{current_pack.subject}</h3><p /><div>{current_pack.subject2}</div></>\n                                    : <h3 style={{ fontWeight: 'bold' }}>{current_pack.subject}</h3>}\n                        <span className={\"inf\" + current_pack.css}>{current_pack.necessary}</span>\n                        <dl className={\"fir\" + current_pack.css}>\n                            <dt>{current_pack.name}</dt>\n                            <dd>\n                                <input\n                                    type=\"text\"\n                                    placeholder={current_pack.placeholder}\n                                    style={{ width: '100%' }}\n                                    name=\"name\"\n                                    value={name}\n                                    onChange={onChange}\n                                />\n                            </dd>\n                        </dl>\n                        <dl>\n                            <dt>{current_pack.belong} </dt>\n                            <dd><input type=\"text\" style={{ width: '100%' }} name=\"position\" value={position} onChange={onChange} /></dd>\n                        </dl>\n                        <dl>\n                            <dt>{current_pack.title}</dt>\n                            <dd><input type=\"text\" style={{ width: '100%' }} name=\"title\" value={title} onChange={onChange} /></dd>\n                        </dl>\n                        <dl>\n                            <dt>{current_pack.mobile} </dt>\n                            <dd><input type=\"tel\" style={{ width: '100%' }} name=\"phone\" value={phone} onChange={onChange} onKeyDown={onlyNumberListener} /></dd>\n                        </dl>\n                        <dl>\n                            <dt>{current_pack.phone} </dt>\n                            <dd><input type=\"tel\" style={{ width: '100%' }} name=\"tel\" value={tel} onChange={onChange} onKeyDown={onlyNumberListener} /></dd>\n                        </dl>\n                        <dl>\n                            <dt>{current_pack.email} </dt>\n                            <dd>\n                                <input type=\"email\" style={{ width: '100%' }} name=\"email\" value={email} onChange={onChange} />\n                            </dd>\n                        </dl>\n                        <div className={\"privacy\" + current_pack.css}>\n                            <h4>· {current_pack.privacy}</h4>\n                            <span>\n                                <strong>{current_pack.privacy}</strong>\n\n                                    ㈜이노윙(이하 “회사”)는 정보통신망 이용촉진 및 정보보호에 관한 법률, 개인정보보호법에 따라\n                                    모든 고객님의 개인정보보호 및 권익을 보호하기 위하여 수집, 보유된 정보를 적법하고 적정하게 취급할 것입니다.\n\n                                    \"회사\"는 개인정보와 관련한 고객님의 고충을 원활하게 처리할 수 있도록 관련 법령에 의거한\n                                    개인정보 취급방침을 정하여 \"회사\"의 서비스를 이용하는 고객님의 권익보호에 최선을 다하겠습니다.\n                                    본 개인정보처리방침은 ㈜이노윙이 제공하는 서비스 이용에 적용되며 다음과 같은 내용을 담고 있습니다.\n\n                                    제12조 (서비스의 이용 신청에 대한 승낙과 거절)\n                                </span>\n                            <em>\n                                <strong>*</strong>{current_pack.agree}\n                                <input type=\"checkbox\" id=\"p1\" name=\"\" className={\"leftch\" + current_pack.css} onClick={() => setAgree(!agree)} />\n                                <label htmlFor=\"p1\"><span></span> </label>\n                            </em>\n                        </div>\n                        <Link to=\"#\" className={\"btin\" + current_pack.css} onClick={inputCheck}>{current_pack.submit} </Link>\n                    </div>\n                }\n            </div>\n            <Backdrop\n                className={classes.backdrop + current_pack.css}\n                open={open}\n                onClick={close}\n            />\n        </>\n    )\n}\n\nexport default OnlineExhibitionEventContainer;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default ({ selectLanguage, setDefault }) => {\r\n    const language = useSelector(state => state.language.current);\r\n    //--------------------------------------------------------------------------------------\r\n    const LANGUAGE_PACK = {\r\n        kr: {\r\n            css: \"\"\r\n        },\r\n        en: {\r\n            css: \" language-en\"\r\n        },\r\n        cn: {\r\n            css: \" language-cn\"\r\n        },\r\n        jp: {\r\n            css: \" language-jp\"\r\n        }\r\n    }\r\n\r\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\r\n    //--------------------------------------------------------------------------------------\r\n\r\n    return (\r\n        <>\r\n            <h1>\r\n                <Link to=\"/\" onClick={setDefault} >\r\n                    <img src={`${process.env.PUBLIC_URL}/img/h1_logo.png`} alt=\"\" />\r\n                    <img src={`${process.env.PUBLIC_URL}/img/h1_logo_txt.png`} alt=\"\" />\r\n                </Link>\r\n            </h1>\r\n            <div className={\"select\" + current_pack.css}>\r\n                <select onChange={selectLanguage} value={language} className={\"select-option\" + current_pack.css}>\r\n                    <option value=\"kr\">한국어</option>\r\n                    <option value=\"en\">english</option>\r\n                    {/* <option value=\"cn\">china</option>\r\n                    <option value=\"jp\">japan</option> */}\r\n                </select>\r\n                <div className={\"select__arrow\" + current_pack.css}></div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default ({ onClick, item }) => {\r\n    const selectEffect = item.checked ? 'on' : '';\r\n    const language = useSelector(state => state.language.current);\r\n    //--------------------------------------------------------------------------------------\r\n    const LANGUAGE_PACK = {\r\n        kr: {\r\n            css: \"\"\r\n        },\r\n        en: {\r\n            css: \" language-en\"\r\n        },\r\n        cn: {\r\n            css: \" language-cn\"\r\n        },\r\n        jp: {\r\n            css: \" language-jp\"\r\n        }\r\n    }\r\n\r\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\r\n    //--------------------------------------------------------------------------------------\r\n    \r\n    const LANGUAGE_PATH = language !== '' ? `/${language}` : '';\r\n    return (\r\n        <li>\r\n            <Link to={LANGUAGE_PATH + item.path} className={selectEffect + current_pack.css} onClick={() => onClick(item.id)}>\r\n                {language === 'en'\r\n                    ? item.en\r\n                    : language === 'cn'\r\n                    ? item.cn\r\n                    : language === 'jp'\r\n                    ? item.jp\r\n                    : item.kr}\r\n            </Link>\r\n        </li>\r\n    );\r\n};\r\n","import React from 'react'\r\n\r\nimport HeaderNavItem from './HeaderNavItem'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default ({ Language, navList, selected }) => {\r\n    const language = useSelector(state => state.language.current);\r\n\r\n    //--------------------------------------------------------------------------------------\r\n    const LANGUAGE_PACK = {\r\n        kr: {\r\n            css: \"\",\r\n            title: \"컨퍼런스\"\r\n        },\r\n        en: {\r\n            css: \" language-en\",\r\n            title: \"Conference\"\r\n        },\r\n        cn: {\r\n            css: \" language-cn\",\r\n            title: \"중국어\"\r\n        },\r\n        jp: {\r\n            css: \" language-jp\",\r\n            title: \"일본어\"\r\n        }\r\n    }\r\n\r\n    const current_pack = LANGUAGE_PACK[language] ? LANGUAGE_PACK[language] : LANGUAGE_PACK[\"kr\"]\r\n    //--------------------------------------------------------------------------------------\r\n\r\n    return (\r\n        <div id=\"lnb\" className={current_pack.css}>\r\n            <span>\r\n                <a href=\"https://www.youtube.com/channel/UCrVe4zDkzenuAjrH-6ukEjw\" target=\"_blank\" rel=\"noopener noreferrer\" ><img src={`${process.env.PUBLIC_URL}/img/ic_youtube.png`} alt=\"\" /></a>\r\n                <a href=\"https://www.facebook.com/6%EC%B0%A8%EC%82%B0%EC%97%85%EC%A0%9C%EC%A3%BC%EA%B5%AD%EC%A0%9C%EB%B0%95%EB%9E%8C%ED%9A%8C-112819440075222\" target=\"_blank\" rel=\"noopener noreferrer\" ><img src={`${process.env.PUBLIC_URL}/img/ic_facebook.png`} alt=\"\" /></a>\r\n                <a href=\"https://www.instagram.com/farmingplus_jeju/\" target=\"_blank\" rel=\"noopener noreferrer\" ><img src={`${process.env.PUBLIC_URL}/img/ic_instagram.png`} alt=\"\" /></a>\r\n            </span>\r\n            <ul>\r\n                {navList.map(item => (\r\n                    <HeaderNavItem key={item.id} onClick={selected} item={item} Language={Language} />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React, { useCallback, useState } from 'react';\nimport HeaderLogo from './HeaderLogo';\nimport HeaderNav from './HeaderNav';\n\nimport { Paths } from '../../paths/index'\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst LANGUAGE_URL_LIST = ['/kr', '/en', '/cn', '/jp'];\n\nconst Header = () => {\n    const location = useLocation();\n    const history = useHistory();\n\n\n    const selectLanguage = useCallback(e => {\n        // 언어 변경\n        const pathbase = LANGUAGE_URL_LIST.reduce((prev, cur) => {\n            return prev.replace(cur, '');\n        }, location.pathname);\n        history.push(`/${e.target.value}` + pathbase + location.search);\n    }, [location, history]);\n\n    const [navList, setNavList] = useState([\n        {\n            id: 1,\n            kr: \"오프닝세션\",\n            en: \"Opening-Session\",\n            cn: \"중국어\",\n            jp: \"일본어\",\n            path: Paths.session,\n            checked: false\n        },\n        {\n            id: 2,\n            kr: \"컨퍼런스\",\n            en: \"Conference\",\n            cn: \"중국어\",\n            jp: \"일본어\",\n            path: Paths.conference,\n            checked: false\n        },\n        {\n            id: 3,\n            kr: \"온라인전시관\",\n            en: \"Online-Exhibition\",\n            cn: \"중국어\",\n            jp: \"일본어\",\n            path: Paths.exhibition,\n            checked: false\n        },\n        {\n            id: 4,\n            kr: \"공지 및 이벤트\",\n            en: \"Notice\",\n            cn: \"중국어\",\n            jp: \"일본어\",\n            path: Paths.notice,\n            checked: false\n        },\n        {\n            id: 5,\n            kr: \"SNS\",\n            en: \"SNS\",\n            cn: \"중국어\",\n            jp: \"일본어\",\n            path: Paths.sns,\n            checked: false\n        }\n    ])\n\n    const selected = useCallback(id => {\n        setNavList(\n            navList.map(item =>\n                item.id === id ? { ...item, checked: true } : { ...item, checked: false }\n            )\n        )\n    }, [navList])\n\n    const setDefault = () => setNavList(navList.map(item => ({ ...item, checked: false })))\n\n    return (\n        <header>\n            <HeaderLogo selectLanguage={selectLanguage} setDefault={setDefault} />\n            <HeaderNav navList={navList} selected={selected} />\n        </header>\n    );\n};\n\nexport default Header;","import { createAction, handleActions } from 'redux-actions';\n\nconst SET_LANGUAGE = 'language/SET_LANGUAGE';\n\n\nexport const setLanguage = createAction(SET_LANGUAGE, c_lang => c_lang);\n\nconst initialState = {\n    current: \"\"\n};\n\nconst language = handleActions(\n    {\n        [SET_LANGUAGE]: (state, action) => (\n            // console.log(state, action),\n            {\n                current: action.payload\n            })\n    },\n    initialState\n);\n\nexport default language;","import React, { useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport ErrorPage from './pages/ErrorPage';\nimport HomePage from './pages/HomePage';\nimport OnlineExhibitionPage from './pages/OnlineExhibitionPage';\nimport ConferencePage from './pages/ConferencePage';\nimport WelcomingPage from './pages/WelcomingPage';\nimport NoticeListPage from './pages/NoticeListPage'\nimport SNSPage from './pages/SNSPage'\n\nimport DialogContainer from './container/assets/DialogContainer';\nimport LoadingContainer from './container/assets/LoadingContainer';\nimport OnlineExhibitionEventContainer from './container/OnlineExhibitionEventContainer';\n\nimport Header from './components/header/Header'\n\nimport { Paths } from './paths';\n\nimport { useDispatch } from 'react-redux';\nimport { setLanguage } from './store/language';\nimport { isMobile } from './lib/formatChecker';\n\nconst LANGUAGE_LIST = ['kr', 'cn', 'en', 'jp'];\n\nconst App = ({ match }) => {\n    const reduxDispatch = useDispatch();\n    const { language } = match.params;\n\n    const state = LANGUAGE_LIST.find(item => item === language);\n    // 언어 팩에 일치하는 경로가 아니면 undefined 반환\n\n    useEffect(() => {\n        if (state) {\n            // 만약 경로의 제일 처음에 언어가 선택되어 있으면\n            // 그 언어를 리덕스에 저장.\n            reduxDispatch(setLanguage(state));\n        }\n    }, [reduxDispatch, state]);\n\n    useEffect(() => {\n        if(isMobile() && process.env.NODE_ENV === 'production') {\n            window.location.href = 'http://m.6farming-plus-jeju.com';\n        }\n    });\n\n    const STATE_PATH = state ? `/${state}` : '';\n    const CSS_PATH = state ? `${state}` : 'kr';\n\n    return (\n        <>\n            <link rel=\"stylesheet\" type=\"text/css\" href={`${process.env.PUBLIC_URL}/stylesheets/${CSS_PATH}/app.css`} />\n            <link rel=\"stylesheet\" type=\"text/css\" href={`${process.env.PUBLIC_URL}/stylesheets/${CSS_PATH}/header.css`} />\n            <div className={language}>\n                <Header />\n                <Switch>\n                    <Route path={STATE_PATH + Paths.index} component={HomePage} exact />\n                    <Route path={STATE_PATH + Paths.exhibition + '/:index?'} component={OnlineExhibitionPage} />\n                    <Route path={STATE_PATH + Paths.conference} component={ConferencePage} />\n                    <Route path={STATE_PATH + Paths.session + '/:mode?'} component={WelcomingPage} />\n                    <Route path={STATE_PATH + Paths.notice + '/:index?'} component={NoticeListPage} />\n                    <Route path={STATE_PATH + Paths.sns} component={SNSPage} />\n                    <Route component={ErrorPage} />\n                </Switch>\n\n                <OnlineExhibitionEventContainer />\n                <DialogContainer />\n                <LoadingContainer />\n            </div>\n        </>\n    );\n};\n\nexport default App;\n","const isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n        ),\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.',\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister();\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import { createAction, handleActions } from 'redux-actions';\n\nconst START_LOADING = 'loading/START_LOADING';\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\n\nexport const startLoading = createAction(\n    START_LOADING,\n    (requestType) => requestType,\n);\n\nexport const finishLoading = createAction(\n    FINISH_LOADING,\n    (requestType) => requestType,\n);\n\nconst initialState = {};\n\nconst loading = handleActions(\n    {\n        [START_LOADING]: (state, action) => ({\n            ...state,\n            [action.payload]: true,\n        }),\n        [FINISH_LOADING]: (state, action) => ({\n            ...state,\n            [action.payload]: false,\n        }),\n    },\n    initialState,\n);\n\nexport default loading;\n","import { combineReducers } from \"redux\";\n\nimport dialog from './dialog';\nimport loading from './loading';\nimport modal from './modal';\nimport language from './language';\nimport exhibition from './exhibition'\n\nconst rootReducer = combineReducers({\n    loading,\n    dialog,\n    modal,\n    language,\n    exhibition\n});\n\nexport default rootReducer;\n","import 'core-js/stable';\nimport 'regenerator-runtime/runtime';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n/* Library */\n\nimport { createStore } from \"redux\";\nimport { Provider } from 'react-redux';\n\nimport rootReducer  from './store';\n/* Redux */\n\n\nconst store = createStore(\n    rootReducer\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <Route path=\"/:language?\" component={App} />\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}